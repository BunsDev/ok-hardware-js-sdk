{"version":3,"sources":["src/components/ReceivePin.tsx","src/components/DeviceList.tsx","src/components/UploadScreen/index.tsx","src/components/MethodInvoke.tsx","src/components/CallEVMMethods.tsx","src/components/CallBTCMethods.tsx","src/components/CallDeviceMethods.tsx","src/components/CallStarcoinMethods.tsx","src/components/CallNEMMethods.tsx","src/components/CallSolanaMethods.tsx","src/components/CallStellarMethods.tsx","src/components/CallOtherMethods.tsx","src/components/CallTronMethods.tsx","src/components/CallConfluxMethods.tsx","src/components/CallNearMethods.tsx","src/components/CallAptosMethods.tsx","src/components/CallAlgoMethods.tsx","src/components/CallCosmosMethods.tsx","src/components/CallXrpMethods.tsx","src/components/CallSuiMethods.tsx","src/components/CallCardanoMethods.tsx","src/components/CallFilecoinMethods.tsx","src/components/CallPolkadotMethods.tsx","src/components/CallKaspaMethods.tsx","src/components/CallNexa.tsx","src/components/CallMethods.tsx","src/components/UploadScreen/nftUtils.ts"],"names":["ReceivePin","_ref","value","onChange","onConfirm","_jsxs","View","style","maxWidth","children","_jsx","Text","fontSize","TextInput","height","borderColor","borderWidth","padding","Platform","OS","margin","onChangeText","text","Button","title","onPress","STORE_KEY","Item","item","backgroundColor","textColor","TouchableOpacity","styles","name","DeviceList","_ref2","data","onSelected","_useState","useState","_useState2","_slicedToArray","selectedId","setSelectedId","useEffect","_regeneratorRuntime","async","_context2","prev","next","awrap","AsyncStorage","getItem","sent","abrupt","t0","console","log","stop","Promise","getSelectedId","then","connectId","SafeAreaView","container","seleteWrap","_context3","removeItem","FlatList","renderItem","_ref3","color","_context","setItem","keyExtractor","extraData","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","marginVertical","marginHorizontal","display","flexDirection","alignItems","getUrlExtension","url","_url$split$0$split$po","split","pop","trim","generateUploadResParams","uri","width","cb","_data$arrayBuffer$byt","_data$arrayBuffer","_zoomData$arrayBuffer","_zoomData$arrayBuffer2","zoomData","params","compressHomescreen","arrayBuffer","formatBytes","byteLength","resType","ResourceType","WallPaper","suffix","dataHex","bytesToHex","thumbnailDataHex","nftMetaData","getOriginX","originW","originH","scaleW","scaleH","Math","ceil","originX","_imageResult$base","actions","imageResult","buffer","resize","push","crop","originY","manipulateAsync","compress","format","SaveFormat","JPEG","base64","Buffer","from","Uint8Array","_objectSpread","borderRadius","overflow","paddingStart","paddingEnd","paddingVertical","input","UploadScreen","React","memo","_uploadScreenParams$s","_uploadScreenParams$n","SDK","type","commonParams","selectedDevice","uploadScreenParams","setUploadScreenParams","_useState3","_useState4","image","setImage","_useState5","_useState6","previewData","setPreviewData","_useState7","_useState8","nftUrl","setNftUrl","imageUrl","_await$getImageSize","uploadResParams","_selectedDevice$conne","response","getImageSize","imageToBase64","generateUploadNFTParams","deviceUploadResource","fontWeight","result","_context5","ImagePicker","mediaTypes","Images","allowsEditing","quality","cancelled","v","Picker","selectedValue","onValueChange","itemValue","label","_image$uri","_image$width","_image$height","_selectedDevice$conne2","_context4","handleScreenUpdate","_selectedDevice$conne3","deviceFullyUploadResource","Image","source","resizeMode","MethodInvoke","options","onCall","setData","setResult","undefined","resultSuccess","setResultSUccess","prevState","newData","_toConsumableArray","index","findIndex","currItem","_item$value$toString2","_item$value2","_item$value$toString","_item$value","Switch","toString","newText","parseInt","replace","card","cardHeader","cardContent","map","inputItem","success","failure","inputResult","callData","res","forEach","currCallData","includes","key","length","JSON","stringify","textAlign","cardFooter","cursor","justifyContent","CallEVMMethods","_currentDevice$connec","_currentDevice$featur","_currentDevice$featur2","currentDevice","deviceId","features","buttonContainer","_data$chainId","evmGetAddress","chainId","Number","bundle","path","showOnOneKey","_data$chainId2","evmGetPublicKey","_data$chainId3","evmSignMessage","evmSignMessageEIP712","repeat","evmSignTransaction","_data$chainId4","evmSignTypedData","types","EIP712Domain","Message","primaryType","domain","message","Wallet","_data$chainId5","BulkOrder","OrderComponents","OfferItem","ConsiderationItem","version","verifyingContract","tree","offerer","offer","itemType","token","identifierOrCriteria","startAmount","endAmount","consideration","recipient","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter","_data$chainId6","parse","_data$chainId7","evmVerifyMessage","flexWrap","gap","CoinMap","0","2","3","145","CallBTCMethods","btcGetAddress","btcGetPublicKey","btcSignMessage","btcVerifyMessage","btcSignTransaction","inputs","address_n","prev_hash","prev_index","amount","outputs","script_type","address","refTxs","hash","script_sig","sequence","bin_outputs","script_pubkey","lock_time","CallDeviceMethods","getFeatures","getPassphraseState","deviceBackup","deviceChangePin","deviceFlags","deviceRebootToBootloader","deviceRebootToBoardloader","deviceUpdateReboot","deviceRecovery","deviceReset","deviceSettings","safetyChecks","deviceVerify","deviceWipe","deviceSupportFeatures","deviceUpdateBootloader","checkBridgeStatus","checkTransportRelease","checkFirmwareRelease","checkBLEFirmwareRelease","CallStarcoinMethods","starcoinGetAddress","starcoinGetPublicKey","starcoinSignMessage","starcoinVerifyMessage","starcoinSignTransaction","CallNEMMethods","nemGetAddress","nemSignTransaction","transaction","payload","CallSolanaMethods","solGetAddress","solSignTransaction","CallStellarMethods","stellarGetAddress","stellarSignTransaction","networkPassphrase","operations","destination","asset","CallOtherMethods","cipherKeyValue","CallTronMethods","tronGetAddress","tronSignMessage","tronSignTransaction","contract","transferContract","toAddress","triggerSmartContract","contractAddress","freezeBalanceV2Contract","frozenBalance","resource","unfreezeBalanceV2Contract","unfreezeBalance","CallConfluxMethods","confluxGetAddress","confluxSignMessage","confluxSignMessageCIP23","confluxSignTransaction","CallNearMethods","nearGetAddress","nearSignTransaction","CallAptosMethods","aptosGetAddress","aptosGetPublicKey","aptosSignMessage","aptosSignTransaction","CallAlgoMethods","algoGetAddress","algoSignTransaction","CallCosmosMethods","cosmosGetAddress","cosmosGetPublicKey","cosmosSignTransaction","CallXrpMethods","xrpGetAddress","xrpSignTransaction","fee","flags","maxLedgerVersion","payment","CallSuiMethods","suiGetAddress","suiGetPublicKey","suiSignTransaction","CallCardanoMethods","cardanoGetAddress","addressParameters","addressType","stakingPath","stakingKeyHash","paymentScriptHash","stakingScriptHash","protocolMagic","networkId","derivationType","isCheck","cardanoGetPublicKey","cardanoSignTransaction","signingMode","tokenBundle","policyId","tokenAmounts","assetNameBytes","cardanoSignMessage","CallFilecoinMethods","filecoinGetAddress","filecoinSignTransaction","CallPolkadotMethods","polkadotGetAddress","prefix","network","polkadotSignTransaction","CallKaspaMethods","kaspaGetAddress","kaspaSignTransaction","lockTime","sigHashType","sigOpCount","outputIndex","prevTxId","sequenceNumber","output","satoshis","script","scriptVersion","CallNexaMethods","nexaGetAddress","_","nexaSignTransaction","registerListener","CallMethods","_optionalParams$retry","_optionalParams$retry2","_optionalParams$pollI","_optionalParams$pollI2","_optionalParams$timeo","_optionalParams$timeo2","_optionalParams$passp","HardwareLowLevelSDK","showPinInput","setShowPinInput","pinValue","setPinValue","devices","setDevices","setSelectedDevice","_useState9","_useState10","selectedFile","setSelectedFile","_useState11","_useState12","firmwareType","setFirmwareType","_useState13","_useState14","optionalParams","setOptionalParams","_useState15","_useState16","addHardwareGlobalEventListener","emit","event","on","UI_EVENT","UI_REQUEST","REQUEST_PIN","uiResponse","UI_RESPONSE","RECEIVE_PIN","REQUEST_PASSPHRASE","setTimeout","RECEIVE_PASSPHRASE","passphraseOnDevice","save","FIRMWARE_EVENT","DEVICE","FEATURES","CONNECT","DISCONNECT","handleFirmwareUpdateV2","_context12","updateType","platform","forcedUpdateRes","binary","firmwareUpdateV2","searchDevices","handleSearchDevices","handleGetFeatures","handleCheckFirmwareRelease","handleCheckBLEFirmwareRelease","handleCheckTransportRelease","_context6","handleCheckBridgeStatus","_context7","checkBridgeRelease","willUpdateFirmwareVersion","handleCheckBridgeRelease","_context8","checkBootloaderRelease","handleCheckBootloaderRelease","cancel","RNRestart","Restart","_context13","getLogs","handleGetLogs","_context14","handleGetPassphraseState","_context15","requestWebUsbDevice","handleRequestWebUsbDevice","_context9","handleUpdateBootloader","_context10","updateSettings","connectSrc","handleUpdateSettings","val","file","_context11","firmwareUpdate","handleFirmwareUpdate","e","callback","_e$target$files","target","files","reader","FileReader","readAsArrayBuffer","onload","array","onFileChange","device","commonParamItem","keepSession","keyboardType","retryCount","pollIntervalTime","timeout","passphraseState","initSession","bytes","decimals","arguments","k","dm","sizes","i","floor","parseFloat","pow","toFixed","resolve","reject","getSize","error","axios","get","responseType","headers","getOriginY","compressNFT","isThumbnail","aspectRatioLonger","aspectRatioEqueal","metaData","metadataBuf","header","subheader","owner","Nft"],"mappings":"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","file":"static/js/3.a461eb4e.chunk.js","sourcesContent":["import React from 'react';\nimport { View, TextInput, Text, Button, Platform } from 'react-native';\n\ntype IReceivePinProps = {\n  value: string;\n  onChange: (value: string) => void;\n  onConfirm: (value: string) => void;\n};\n\nexport function ReceivePin({ value, onChange, onConfirm }: IReceivePinProps) {\n  return (\n    <View style={{ maxWidth: 300 }}>\n      <Text style={{ fontSize: 24 }}>Input Pin</Text>\n      <TextInput\n        style={{\n          height: 40,\n          borderColor: 'gray',\n          borderWidth: 1,\n          padding: Platform.OS === 'web' ? 16 : 0,\n          margin: 12,\n        }}\n        onChangeText={text => onChange(text)}\n        value={value}\n      />\n      <Button title=\"confirm\" onPress={() => onConfirm(value)} />\n    </View>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  FlatList,\n  SafeAreaView,\n  StyleSheet,\n  StatusBar,\n  TouchableOpacity,\n  Button,\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport type Device = {\n  connectId: string;\n  name: string;\n  features?: any;\n};\n\nconst STORE_KEY = '@onekey/selectedId';\nconst storeSelectedId = async (value: string) => {\n  try {\n    await AsyncStorage.setItem(STORE_KEY, value);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getSelectedId = async () => {\n  try {\n    const value = await AsyncStorage.getItem(STORE_KEY);\n    if (value !== null) {\n      return value;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst removeSelectedId = async () => {\n  try {\n    await AsyncStorage.removeItem(STORE_KEY);\n  } catch (e) {\n    // remove error\n  }\n};\n\ntype ItemProps = {\n  item: Device;\n  onPress: () => void;\n  backgroundColor: { backgroundColor: string };\n  textColor: { color: string };\n};\n\nconst Item = ({ item, onPress, backgroundColor, textColor }: ItemProps) => (\n  <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\n    <Text style={[styles.title, textColor]}>{item.name}</Text>\n  </TouchableOpacity>\n);\n\ntype IDeviceListProps = {\n  data: Device[];\n  onSelected: (device: Device) => void;\n};\n\nexport function DeviceList({ data, onSelected }: IDeviceListProps) {\n  const [selectedId, setSelectedId] = useState<string | null>(null);\n\n  useEffect(() => {\n    getSelectedId().then(value => {\n      if (value) {\n        setSelectedId(value);\n        onSelected({ connectId: value } as Device);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderItem = ({ item }: { item: Device }) => {\n    const backgroundColor = item.connectId === selectedId ? '#6e3b6e' : '#f9c2ff';\n    const color = item.connectId === selectedId ? 'white' : 'black';\n\n    return (\n      <Item\n        item={item}\n        onPress={() => {\n          setSelectedId(item.connectId);\n          storeSelectedId(item.connectId);\n          onSelected(item);\n        }}\n        backgroundColor={{ backgroundColor }}\n        textColor={{ color }}\n      />\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.seleteWrap}>\n        <Text>当前选择设备：{selectedId}</Text>\n        <Button title=\"清除\" onPress={() => removeSelectedId()} />\n      </View>\n      <FlatList\n        data={data}\n        renderItem={renderItem}\n        keyExtractor={item => item.connectId}\n        extraData={selectedId}\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 16,\n  },\n  seleteWrap: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","import { Buffer } from 'buffer';\nimport React, { useState, useEffect } from 'react';\nimport { Platform, Button, View, Text, StyleSheet, TextInput, Image } from 'react-native';\nimport { bytesToHex } from '@noble/hashes/utils';\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Action, manipulateAsync, SaveFormat } from 'expo-image-manipulator';\n\nimport { DeviceUploadResourceParams, CoreApi, CommonParams, KnownDevice } from '@onekeyfe/hd-core';\nimport { ResourceType } from '@onekeyfe/hd-transport';\nimport { getImageSize, imageToBase64, formatBytes, generateUploadNFTParams } from './nftUtils';\n\ninterface Props {\n  SDK: CoreApi;\n  type: 'Bluetooth' | 'USB';\n  commonParams?: CommonParams;\n  selectedDevice: KnownDevice;\n}\n\ninterface UploadResourceParams {\n  suffix?: string;\n  resType?: number;\n  nftMetaData?: string;\n}\n\nfunction getUrlExtension(url: string) {\n  if (Platform.OS === 'web') {\n    return url.split(';')[0].split('/')[1];\n  }\n  return url.split(/[#?]/)[0].split('.').pop()?.trim();\n}\n\nexport const generateUploadResParams = async (\n  uri: string,\n  width: number,\n  height: number,\n  cb?: (data: { base64?: string }) => void\n) => {\n  const data = await compressHomescreen(uri, 480, 800, width, height);\n  const zoomData = await compressHomescreen(uri, 144, 240, width, height);\n\n  cb?.(data as any);\n\n  if (!data?.arrayBuffer && !zoomData?.arrayBuffer) return;\n\n  console.log('homescreen data byte length: ', formatBytes(data?.arrayBuffer?.byteLength ?? 0, 3));\n  console.log(\n    'homescreen thumbnail byte length: ',\n    formatBytes(zoomData?.arrayBuffer?.byteLength ?? 0, 3)\n  );\n\n  const params: DeviceUploadResourceParams = {\n    resType: ResourceType.WallPaper,\n    suffix: 'jpeg',\n    dataHex: bytesToHex(data?.arrayBuffer as Uint8Array),\n    thumbnailDataHex: bytesToHex(zoomData?.arrayBuffer as Uint8Array),\n    nftMetaData: '',\n  };\n\n  return params;\n};\n\nfunction getOriginX(originW: number, originH: number, scaleW: number, scaleH: number) {\n  const width = Math.ceil((scaleH / originH) * originW);\n  console.log(`image true width: `, width);\n  console.log(`image should width: `, scaleW);\n  console.log(`image true height: `, scaleH);\n  if (width <= scaleW) {\n    return null;\n  }\n  const originX = Math.ceil(Math.ceil(width / 2) - Math.ceil(scaleW / 2));\n  console.log(`originX: `, originX);\n  console.log(`crop size: height: ${scaleH}, width: ${scaleW}, originX: ${originX}, originY: 0`);\n  return originX;\n}\n\nexport const compressHomescreen = async (\n  uri: string,\n  width: number,\n  height: number,\n  originW: number,\n  originH: number\n) => {\n  if (!uri) return;\n  console.log(`width: ${width}, height: ${height}, originW: ${originW}, originH: ${originH}`);\n  const actions: Action[] = [\n    {\n      resize: {\n        height,\n      },\n    },\n  ];\n  const originX = getOriginX(originW, originH, width, height);\n  if (originX !== null) {\n    actions.push({\n      crop: {\n        height,\n        width,\n        originX,\n        originY: 0,\n      },\n    });\n  }\n  const imageResult = await manipulateAsync(uri, actions, {\n    compress: 0.9,\n    format: SaveFormat.JPEG,\n    base64: true,\n  });\n\n  const buffer = Buffer.from(imageResult.base64 ?? '', 'base64');\n  const arrayBuffer = new Uint8Array(buffer);\n  return {\n    ...imageResult,\n    arrayBuffer,\n  };\n};\n\nfunction UploadScreenComponent({ SDK, type, commonParams, selectedDevice }: Props) {\n  const [uploadScreenParams, setUploadScreenParams] = useState<UploadResourceParams>({\n    resType: 0,\n  });\n\n  const [image, setImage] = useState<ImagePicker.ImageInfo | null>(null);\n  const [previewData, setPreviewData] = useState<string | null>(null);\n  const [nftUrl, setNftUrl] = useState('');\n\n  useEffect(() => {\n    // generate nft data\n    if (nftUrl) {\n      const imageUrl = nftUrl;\n      (async () => {\n        const { width, height } = await getImageSize(imageUrl);\n        console.log('image size: ', { width, height });\n        const base64 = await imageToBase64(imageUrl);\n        console.log(base64);\n\n        let uploadResParams: DeviceUploadResourceParams | undefined;\n        try {\n          uploadResParams = await generateUploadNFTParams(base64, width, height, data => {\n            setImage({ uri: base64 } as any);\n            setPreviewData(`data:image/png;base64,${data?.base64}` ?? null);\n          });\n        } catch (e) {\n          console.log('image operate error: ', e);\n          return;\n        }\n\n        if (uploadResParams) {\n          const response = await SDK.deviceUploadResource(\n            type === 'Bluetooth' ? selectedDevice?.connectId ?? '' : '',\n            {\n              ...commonParams,\n              ...uploadResParams,\n            }\n          );\n          console.log('example firmwareUpdate response: ', response);\n        }\n      })();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nftUrl]);\n\n  const handleScreenUpdate = async () => {\n    // setPreviewData(`data:image/png;base64,${data?.base64}` ?? null);\n\n    let uploadResParams: DeviceUploadResourceParams | undefined;\n    try {\n      uploadResParams = await generateUploadResParams(\n        image?.uri ?? '',\n        image?.width ?? 0,\n        image?.height ?? 0,\n        data => {\n          setPreviewData(`data:image/png;base64,${data?.base64}` ?? null);\n        }\n      );\n    } catch (e) {\n      console.log('image operate error: ', e);\n      return;\n    }\n\n    if (uploadResParams) {\n      const response = await SDK.deviceUploadResource(\n        type === 'Bluetooth' ? selectedDevice?.connectId ?? '' : '',\n        {\n          ...commonParams,\n          ...uploadResParams,\n        }\n      );\n      console.log('example firmwareUpdate response: ', response);\n    }\n  };\n\n  const pickImage = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: false,\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result);\n      setUploadScreenParams({\n        ...uploadScreenParams,\n        suffix: getUrlExtension(result.uri),\n      });\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ fontSize: 18, fontWeight: 'bold' }}>Upload Screen Image & Video</Text>\n      <View style={{ flexDirection: Platform.OS === 'web' ? 'row' : 'column' }}>\n        <View style={{ flexDirection: 'column' }}>\n          <View style={styles.item}>\n            <Text>支持 PNG & MP4</Text>\n            {/* {image && <Text>{image}</Text>} */}\n            <Button title=\"Pick image\" onPress={pickImage} />\n          </View>\n        </View>\n        <View style={styles.item}>\n          <Text>文件后缀</Text>\n          <TextInput\n            style={styles.input}\n            value={uploadScreenParams?.suffix ?? ''}\n            onChangeText={v => {\n              setUploadScreenParams({ ...uploadScreenParams, suffix: v });\n            }}\n          />\n        </View>\n        <View style={styles.item}>\n          <Text>资源类型</Text>\n          {/* @ts-expect-error */}\n          <Picker\n            selectedValue={uploadScreenParams?.resType}\n            onValueChange={itemValue =>\n              setUploadScreenParams({ ...uploadScreenParams, resType: itemValue })\n            }\n          >\n            {/* @ts-expect-error */}\n            <Picker.Item label=\"WallPaper\" value=\"0\" />\n            {/* @ts-expect-error */}\n            <Picker.Item label=\"NFT\" value=\"1\" />\n          </Picker>\n        </View>\n        <View style={styles.item}>\n          <Text>NFT 数据</Text>\n          <TextInput\n            style={styles.input}\n            value={uploadScreenParams?.nftMetaData ?? ''}\n            onChangeText={v => {\n              setUploadScreenParams({ ...uploadScreenParams, nftMetaData: v });\n            }}\n          />\n        </View>\n        <View style={styles.item}>\n          <Text>NFT URL</Text>\n          <TextInput\n            style={styles.input}\n            value={nftUrl}\n            onChangeText={v => {\n              setNftUrl(v);\n            }}\n          />\n        </View>\n        <Button title=\"Upload File\" onPress={() => handleScreenUpdate()} />\n        {Platform.OS === 'web' && (\n          <View style={styles.item}>\n            <Button\n              title=\"全量覆盖 RES\"\n              onPress={() => SDK.deviceFullyUploadResource(selectedDevice?.connectId ?? '', {})}\n            />\n          </View>\n        )}\n      </View>\n      {Platform.OS === 'web' && (\n        <View style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n          {image && (\n            <Image\n              style={{ height: 800, width: 480 }}\n              source={{ uri: image.uri }}\n              // this resize mode for nft\n              resizeMode=\"contain\"\n            />\n          )}\n          {previewData && (\n            // NFT\n            <Image style={{ height: 238, width: 238 }} source={{ uri: previewData }} />\n            // HOME SCREEN\n            // <Image style={{ height: 800, width: 480 }} source={{ uri: previewData }} />\n          )}\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    borderRadius: 12,\n    borderColor: '#cccccc',\n    borderWidth: 1,\n    overflow: 'hidden',\n    margin: 12,\n    padding: 12,\n    height: 'auto',\n  },\n  item: {\n    flexDirection: 'column',\n    paddingStart: 12,\n    paddingEnd: 12,\n    paddingVertical: 8,\n  },\n  input: {\n    height: 35,\n    borderWidth: 1,\n    padding: 4,\n  },\n});\n\nconst UploadScreen = React.memo(UploadScreenComponent);\nexport { UploadScreen };\n","import React, { FC, useState } from 'react';\nimport { Button, StyleSheet, Switch, Text, TextInput, View } from 'react-native';\n\nexport type Option = {\n  name: string;\n  value: string | boolean | number | undefined;\n  type: 'string' | 'boolean' | 'number';\n};\n\nexport type MethodInvokeProps = {\n  title: string;\n  options: Option[];\n  onCall: (data: object) => Promise<any>;\n};\n\nconst MethodInvoke: FC<MethodInvokeProps> = ({ title, options, onCall }) => {\n  const [data, setData] = useState(options);\n  const [result, setResult] = useState('');\n  const [resultSuccess, setResultSUccess] = useState(undefined);\n\n  const onSubmit = async () => {\n    const callData = {};\n\n    data.forEach(item => {\n      let { value } = item;\n      if (value === '') {\n        value = undefined;\n      }\n\n      let currCallData: any = callData;\n      if (item.name.includes('.')) {\n        const split = item.name.split('.');\n        split.forEach((key, index) => {\n          if (index === split.length - 1) {\n            currCallData[key] = value;\n          } else {\n            if (!currCallData[key]) {\n              currCallData[key] = {};\n            }\n            currCallData = currCallData[key];\n          }\n        });\n      } else {\n        currCallData[item.name] = value;\n      }\n    });\n\n    const res = await onCall(callData);\n    setResultSUccess(res.success);\n    setResult(JSON.stringify(res));\n    console.log('example get result', res);\n  };\n\n  const onChange = ({ name, value }: { name: string; value: any }) => {\n    setData(prevState => {\n      const newData = [...prevState];\n      const index = newData.findIndex(item => item.name === name);\n      if (index !== -1) {\n        const currItem = newData[index];\n        if (currItem.type === 'boolean') {\n          newData[index] = { ...currItem, value };\n        } else {\n          newData[index] = { ...currItem, value };\n        }\n      }\n      return newData;\n    });\n  };\n\n  const renderItem = ({ item }: { item: Option }) => {\n    if (item.type === 'boolean') {\n      return (\n        <Switch value={!!item.value} onValueChange={v => onChange({ name: item.name, value: v })} />\n      );\n    }\n    if (item.type === 'number') {\n      // TODO Limit input to numbers only\n      return (\n        <TextInput\n          style={styles.input}\n          value={item.value?.toString() ?? ''}\n          onChangeText={v => {\n            const newText = parseInt(v.replace(/[^\\d]+/, ''));\n            onChange({ name: item.name, value: newText });\n          }}\n        />\n      );\n    }\n    return (\n      <TextInput\n        style={styles.input}\n        value={item.value?.toString() ?? ''}\n        onChangeText={v => onChange({ name: item.name, value: v })}\n      />\n    );\n  };\n\n  return (\n    <View style={styles.card}>\n      <Text style={styles.cardHeader}>{title}</Text>\n      <View style={styles.cardContent}>\n        {data.map((item, index) => (\n          <View key={index} style={styles.inputItem}>\n            <Text>{item.name}</Text>\n            {renderItem({ item })}\n          </View>\n        ))}\n\n        <View style={styles.inputItem}>\n          <View style={{ flexDirection: 'row' }}>\n            <Text>Result: </Text>\n            {!!resultSuccess && <Text style={styles.success}>Success</Text>}\n            {resultSuccess === false && <Text style={styles.failure}>Failure</Text>}\n          </View>\n          <TextInput style={styles.inputResult} value={result} />\n        </View>\n      </View>\n      <Button title=\"Submit\" onPress={onSubmit} />\n    </View>\n  );\n};\n\nexport default MethodInvoke;\n\nconst styles = StyleSheet.create({\n  success: {\n    color: '#00ff00',\n  },\n  failure: {\n    color: '#ff0000',\n  },\n  card: {\n    flexDirection: 'column',\n    borderRadius: 12,\n    borderColor: '#cccccc',\n    borderWidth: 1,\n    overflow: 'hidden',\n    margin: 12,\n    height: 'auto',\n  },\n  cardHeader: {\n    padding: 8,\n    textAlign: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  cardFooter: {\n    width: '100%',\n    padding: 8,\n    cursor: 'pointer',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: '#cccccc',\n  },\n  cardContent: {\n    padding: 4,\n    flex: 1,\n  },\n  inputItem: {\n    flexDirection: 'column',\n    padding: 4,\n  },\n  input: {\n    height: 35,\n    margin: 4,\n    borderWidth: 1,\n    padding: 8,\n  },\n  inputResult: {\n    height: 80,\n    margin: 4,\n    borderWidth: 1,\n    padding: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { StyleSheet, Text, View } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallEVMMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallEVMMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallEVMMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>EVM Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"evmGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/60'/0'/0/0\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n            { name: 'chainId', value: 1, type: 'number' },\n          ]}\n          onCall={(data: any) =>\n            SDK.evmGetAddress(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n              chainId: Number(data.chainId ?? 1),\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"evmGetAddress [bundle]\"\n          options={[]}\n          onCall={data =>\n            SDK.evmGetAddress(connectId, deviceId, {\n              ...commonParams,\n              bundle: [\n                { path: \"m/44'/60'/0'/0/10\", showOnOneKey: false },\n                { path: \"m/44'/60'/0'/0/11\", showOnOneKey: false },\n                { path: \"m/44'/60'/0'/0/12\", showOnOneKey: false },\n                { path: \"m/44'/60'/0'/0/13\", showOnOneKey: false },\n                { path: \"m/44'/60'/0'/0/14\", showOnOneKey: false },\n                { path: \"m/44'/60'/0'/0/15\", showOnOneKey: false },\n                { path: \"m/44'/60'/0'/0/16\", showOnOneKey: false },\n                { path: \"m/44'/60'/0'/0/17\", showOnOneKey: false },\n                { path: \"m/44'/60'/0'/0/18\", showOnOneKey: false },\n                { path: \"m/44'/60'/0'/0/19\", showOnOneKey: false },\n              ],\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"evmGetPublicKey\"\n          options={[\n            { name: 'path', value: \"m/44'/60'/0'/0/0\", type: 'string' },\n            { name: 'showOnOneKey', value: true, type: 'boolean' },\n            { name: 'chainId', value: 1, type: 'number' },\n          ]}\n          onCall={(data: any) =>\n            SDK.evmGetPublicKey(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n              chainId: Number(data.chainId ?? 1),\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"evmSignMessage\"\n          options={[\n            { name: 'path', value: \"m/44'/60'/0'/0/0\", type: 'string' },\n            { name: 'messageHex', value: '0x6578616d706c65206d657373616765', type: 'string' },\n            { name: 'chainId', value: 1, type: 'number' },\n          ]}\n          onCall={(data: any) =>\n            SDK.evmSignMessage(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n              chainId: Number(data.chainId ?? 1),\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"evmSignMessageEIP712\"\n          options={[\n            { name: 'path', value: \"m/44'/60'/0'/0/0\", type: 'string' },\n            {\n              name: 'domainHash',\n              value: '7c872d109a4e735dc1886c72af47e9b4888a1507557e0f49c85b570019163373',\n              type: 'string',\n            },\n            {\n              name: 'messageHash',\n              value: '0x07bc1c4f3268fc74b60587e9bb7e01e38a7d8a9a3f51202bf25332aa2c75c644',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.evmSignMessageEIP712(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"evmSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/60'/0'/0/0\", type: 'string' },\n            {\n              name: 'transaction.to',\n              value: '0x7314e0f1c0e28474bdb6be3e2c3e0453255188f8',\n              type: 'string',\n            },\n            {\n              name: 'transaction.value',\n              value: '0xf4240',\n              type: 'string',\n            },\n            {\n              name: 'transaction.data',\n              value: `0x${'01'.repeat(3072)}`,\n              type: 'string',\n            },\n            {\n              name: 'transaction.chainId',\n              value: 1,\n              type: 'number',\n            },\n            {\n              name: 'transaction.nonce',\n              value: '0x00',\n              type: 'string',\n            },\n            {\n              name: 'transaction.gasLimit',\n              value: '0x5208',\n              type: 'string',\n            },\n            {\n              name: 'transaction.gasPrice',\n              value: '0xbebc200',\n              type: 'string',\n            },\n            {\n              name: 'transaction.txType',\n              value: undefined,\n              type: 'number',\n            },\n          ]}\n          onCall={data =>\n            SDK.evmSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"evmSignTransactionEIP1559\"\n          options={[\n            { name: 'path', value: \"m/44'/60'/0'/0/0\", type: 'string' },\n            {\n              name: 'transaction.to',\n              value: '0x7314e0f1c0e28474bdb6be3e2c3e0453255188f8',\n              type: 'string',\n            },\n            {\n              name: 'transaction.value',\n              value: '0xf4240',\n              type: 'string',\n            },\n            {\n              name: 'transaction.data',\n              value: `0x${'01'.repeat(3072)}`,\n              type: 'string',\n            },\n            {\n              name: 'transaction.chainId',\n              value: 1,\n              type: 'number',\n            },\n            {\n              name: 'transaction.nonce',\n              value: '0x00',\n              type: 'string',\n            },\n            {\n              name: 'transaction.gasLimit',\n              value: '0x5208',\n              type: 'string',\n            },\n            {\n              name: 'transaction.maxFeePerGas',\n              value: '0xbebc200',\n              type: 'string',\n            },\n            {\n              name: 'transaction.maxPriorityFeePerGas',\n              value: '0xbebc200',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.evmSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"evmSignTypedData\"\n          options={[\n            { name: 'path', value: \"m/44'/60'/0'/0/0\", type: 'string' },\n            {\n              name: 'metamaskV4Compat',\n              value: true,\n              type: 'boolean',\n            },\n            {\n              name: 'domainHash',\n              value: '7c872d109a4e735dc1886c72af47e9b4888a1507557e0f49c85b570019163373',\n              type: 'string',\n            },\n            {\n              name: 'messageHash',\n              value: '0x07bc1c4f3268fc74b60587e9bb7e01e38a7d8a9a3f51202bf25332aa2c75c644',\n              type: 'string',\n            },\n            { name: 'chainId', value: 1, type: 'number' },\n          ]}\n          onCall={(data: any) =>\n            SDK.evmSignTypedData(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n              data: {\n                types: {\n                  EIP712Domain: [\n                    {\n                      name: 'name',\n                      type: 'string',\n                    },\n                  ],\n                  Message: [\n                    {\n                      name: 'Wallet',\n                      type: 'string',\n                    },\n                    {\n                      name: 'Number',\n                      type: 'uint64',\n                    },\n                  ],\n                },\n                primaryType: 'Message',\n                domain: {\n                  name: 'example.onekey.so',\n                },\n                message: {\n                  Wallet: 'Onekey Touch',\n                  Number: '911112119',\n                },\n              },\n              chainId: Number(data.chainId ?? 1),\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"evmSignTypedData(Nested array)\"\n          options={[\n            { name: 'path', value: \"m/44'/60'/0'/0/0\", type: 'string' },\n            {\n              name: 'metamaskV4Compat',\n              value: true,\n              type: 'boolean',\n            },\n            {\n              name: 'domainHash',\n              value: '276bc64a43ff20d362b6c982bc21d1f83716496363478990aa0bbaa99044923a',\n              type: 'string',\n            },\n            {\n              name: 'messageHash',\n              value: 'f8d0b2b47784324fed641b26f594e164d78a7e53fd6b3c9db099ab5cbfa9fa30',\n              type: 'string',\n            },\n            { name: 'chainId', value: 1, type: 'number' },\n          ]}\n          onCall={(data: any) =>\n            SDK.evmSignTypedData(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n              data: {\n                types: {\n                  EIP712Domain: [\n                    { name: 'name', type: 'string' },\n                    { name: 'version', type: 'string' },\n                    { name: 'chainId', type: 'uint256' },\n                    { name: 'verifyingContract', type: 'address' },\n                  ],\n                  BulkOrder: [{ name: 'tree', type: 'OrderComponents[2][2][2]' }],\n                  OrderComponents: [\n                    { name: 'offerer', type: 'address' },\n                    { name: 'zone', type: 'address' },\n                    { name: 'offer', type: 'OfferItem[]' },\n                    { name: 'consideration', type: 'ConsiderationItem[]' },\n                    { name: 'orderType', type: 'uint8' },\n                    { name: 'startTime', type: 'uint256' },\n                    { name: 'endTime', type: 'uint256' },\n                    { name: 'zoneHash', type: 'bytes32' },\n                    { name: 'salt', type: 'uint256' },\n                    { name: 'conduitKey', type: 'bytes32' },\n                    { name: 'counter', type: 'uint256' },\n                  ],\n                  OfferItem: [\n                    { name: 'itemType', type: 'uint8' },\n                    { name: 'token', type: 'address' },\n                    { name: 'identifierOrCriteria', type: 'uint256' },\n                    { name: 'startAmount', type: 'uint256' },\n                    { name: 'endAmount', type: 'uint256' },\n                  ],\n                  ConsiderationItem: [\n                    { name: 'itemType', type: 'uint8' },\n                    { name: 'token', type: 'address' },\n                    { name: 'identifierOrCriteria', type: 'uint256' },\n                    { name: 'startAmount', type: 'uint256' },\n                    { name: 'endAmount', type: 'uint256' },\n                    { name: 'recipient', type: 'address' },\n                  ],\n                },\n                primaryType: 'BulkOrder',\n                domain: {\n                  name: 'Seaport',\n                  version: '1.4',\n                  chainId: '1',\n                  verifyingContract: '0x00000000000001ad428e4906aE43D8F9852d0dD6',\n                },\n                message: {\n                  tree: [\n                    [\n                      [\n                        {\n                          offerer: '0xa0ed981643B4a37BcfD6C397de2b92809807Abb3',\n                          offer: [\n                            {\n                              itemType: '2',\n                              token: '0x59325733eb952a92e069C87F0A6168b29E80627f',\n                              identifierOrCriteria: '3937',\n                              startAmount: '1',\n                              endAmount: '1',\n                            },\n                          ],\n                          consideration: [\n                            {\n                              itemType: '0',\n                              token: '0x0000000000000000000000000000000000000000',\n                              identifierOrCriteria: '0',\n                              startAmount: '1662500000000000000',\n                              endAmount: '1662500000000000000',\n                              recipient: '0xa0ed981643B4a37BcfD6C397de2b92809807Abb3',\n                            },\n                            {\n                              itemType: '0',\n                              token: '0x0000000000000000000000000000000000000000',\n                              identifierOrCriteria: '0',\n                              startAmount: '87500000000000000',\n                              endAmount: '87500000000000000',\n                              recipient: '0xA1640edd7B69A3BdF98cD9A6A61F663DCf6D2Aa2',\n                            },\n                          ],\n                          startTime: '1678331313',\n                          endTime: '1678936113',\n                          orderType: '0',\n                          zone: '0x004C00500000aD104D7DBd00e3ae0A5C00560C00',\n                          zoneHash:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          salt: '24446860302761739304752683030156737591518664810215442929803500646386929272332',\n                          conduitKey:\n                            '0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000',\n                          totalOriginalConsiderationItems: '2',\n                          counter: '0',\n                        },\n                        {\n                          offerer: '0xa0ed981643B4a37BcfD6C397de2b92809807Abb3',\n                          offer: [\n                            {\n                              itemType: '2',\n                              token: '0x59325733eb952a92e069C87F0A6168b29E80627f',\n                              identifierOrCriteria: '3938',\n                              startAmount: '1',\n                              endAmount: '1',\n                            },\n                          ],\n                          consideration: [\n                            {\n                              itemType: '0',\n                              token: '0x0000000000000000000000000000000000000000',\n                              identifierOrCriteria: '0',\n                              startAmount: '1662500000000000000',\n                              endAmount: '1662500000000000000',\n                              recipient: '0xa0ed981643B4a37BcfD6C397de2b92809807Abb3',\n                            },\n                            {\n                              itemType: '0',\n                              token: '0x0000000000000000000000000000000000000000',\n                              identifierOrCriteria: '0',\n                              startAmount: '87500000000000000',\n                              endAmount: '87500000000000000',\n                              recipient: '0xA1640edd7B69A3BdF98cD9A6A61F663DCf6D2Aa2',\n                            },\n                          ],\n                          startTime: '1678331313',\n                          endTime: '1678936113',\n                          orderType: '0',\n                          zone: '0x004C00500000aD104D7DBd00e3ae0A5C00560C00',\n                          zoneHash:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          salt: '24446860302761739304752683030156737591518664810215442929803664649720063338326',\n                          conduitKey:\n                            '0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000',\n                          totalOriginalConsiderationItems: '2',\n                          counter: '0',\n                        },\n                      ],\n                      [\n                        {\n                          offerer: '0xa0ed981643B4a37BcfD6C397de2b92809807Abb3',\n                          offer: [\n                            {\n                              itemType: '2',\n                              token: '0x59325733eb952a92e069C87F0A6168b29E80627f',\n                              identifierOrCriteria: '4229',\n                              startAmount: '1',\n                              endAmount: '1',\n                            },\n                          ],\n                          consideration: [\n                            {\n                              itemType: '0',\n                              token: '0x0000000000000000000000000000000000000000',\n                              identifierOrCriteria: '0',\n                              startAmount: '1662500000000000000',\n                              endAmount: '1662500000000000000',\n                              recipient: '0xa0ed981643B4a37BcfD6C397de2b92809807Abb3',\n                            },\n                            {\n                              itemType: '0',\n                              token: '0x0000000000000000000000000000000000000000',\n                              identifierOrCriteria: '0',\n                              startAmount: '87500000000000000',\n                              endAmount: '87500000000000000',\n                              recipient: '0xA1640edd7B69A3BdF98cD9A6A61F663DCf6D2Aa2',\n                            },\n                          ],\n                          startTime: '1678331313',\n                          endTime: '1678936113',\n                          orderType: '0',\n                          zone: '0x004C00500000aD104D7DBd00e3ae0A5C00560C00',\n                          zoneHash:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          salt: '24446860302761739304752683030156737591518664810215442929805272723565722202710',\n                          conduitKey:\n                            '0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000',\n                          totalOriginalConsiderationItems: '2',\n                          counter: '0',\n                        },\n                        {\n                          offerer: '0xa0ed981643B4a37BcfD6C397de2b92809807Abb3',\n                          offer: [\n                            {\n                              itemType: '2',\n                              token: '0x59325733eb952a92e069C87F0A6168b29E80627f',\n                              identifierOrCriteria: '4230',\n                              startAmount: '1',\n                              endAmount: '1',\n                            },\n                          ],\n                          consideration: [\n                            {\n                              itemType: '0',\n                              token: '0x0000000000000000000000000000000000000000',\n                              identifierOrCriteria: '0',\n                              startAmount: '1662500000000000000',\n                              endAmount: '1662500000000000000',\n                              recipient: '0xa0ed981643B4a37BcfD6C397de2b92809807Abb3',\n                            },\n                            {\n                              itemType: '0',\n                              token: '0x0000000000000000000000000000000000000000',\n                              identifierOrCriteria: '0',\n                              startAmount: '87500000000000000',\n                              endAmount: '87500000000000000',\n                              recipient: '0xA1640edd7B69A3BdF98cD9A6A61F663DCf6D2Aa2',\n                            },\n                          ],\n                          startTime: '1678331313',\n                          endTime: '1678936113',\n                          orderType: '0',\n                          zone: '0x004C00500000aD104D7DBd00e3ae0A5C00560C00',\n                          zoneHash:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          salt: '24446860302761739304752683030156737591518664810215442929802817449467791056812',\n                          conduitKey:\n                            '0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000',\n                          totalOriginalConsiderationItems: '2',\n                          counter: '0',\n                        },\n                      ],\n                    ],\n                    [\n                      [\n                        {\n                          offerer: '0xa0ed981643B4a37BcfD6C397de2b92809807Abb3',\n                          offer: [\n                            {\n                              itemType: '2',\n                              token: '0x59325733eb952a92e069C87F0A6168b29E80627f',\n                              identifierOrCriteria: '2129',\n                              startAmount: '1',\n                              endAmount: '1',\n                            },\n                          ],\n                          consideration: [\n                            {\n                              itemType: '0',\n                              token: '0x0000000000000000000000000000000000000000',\n                              identifierOrCriteria: '0',\n                              startAmount: '1662500000000000000',\n                              endAmount: '1662500000000000000',\n                              recipient: '0xa0ed981643B4a37BcfD6C397de2b92809807Abb3',\n                            },\n                            {\n                              itemType: '0',\n                              token: '0x0000000000000000000000000000000000000000',\n                              identifierOrCriteria: '0',\n                              startAmount: '87500000000000000',\n                              endAmount: '87500000000000000',\n                              recipient: '0xA1640edd7B69A3BdF98cD9A6A61F663DCf6D2Aa2',\n                            },\n                          ],\n                          startTime: '1678331313',\n                          endTime: '1678936113',\n                          orderType: '0',\n                          zone: '0x004C00500000aD104D7DBd00e3ae0A5C00560C00',\n                          zoneHash:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          salt: '24446860302761739304752683030156737591518664810215442929812710384782076106155',\n                          conduitKey:\n                            '0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000',\n                          totalOriginalConsiderationItems: '2',\n                          counter: '0',\n                        },\n                        {\n                          offerer: '0x0000000000000000000000000000000000000000',\n                          zone: '0x0000000000000000000000000000000000000000',\n                          offer: [],\n                          consideration: [],\n                          orderType: '0',\n                          startTime: '0',\n                          endTime: '0',\n                          zoneHash:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          salt: '0',\n                          conduitKey:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          counter: '0',\n                          totalOriginalConsiderationItems: '0',\n                        },\n                      ],\n                      [\n                        {\n                          offerer: '0x0000000000000000000000000000000000000000',\n                          zone: '0x0000000000000000000000000000000000000000',\n                          offer: [],\n                          consideration: [],\n                          orderType: '0',\n                          startTime: '0',\n                          endTime: '0',\n                          zoneHash:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          salt: '0',\n                          conduitKey:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          counter: '0',\n                          totalOriginalConsiderationItems: '0',\n                        },\n                        {\n                          offerer: '0x0000000000000000000000000000000000000000',\n                          zone: '0x0000000000000000000000000000000000000000',\n                          offer: [],\n                          consideration: [],\n                          orderType: '0',\n                          startTime: '0',\n                          endTime: '0',\n                          zoneHash:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          salt: '0',\n                          conduitKey:\n                            '0x0000000000000000000000000000000000000000000000000000000000000000',\n                          counter: '0',\n                          totalOriginalConsiderationItems: '0',\n                        },\n                      ],\n                    ],\n                  ],\n                },\n              },\n              chainId: Number(data.chainId ?? 1),\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"evmSignTypedData(Bigger data)\"\n          options={[\n            { name: 'path', value: \"m/44'/60'/0'/0/0\", type: 'string' },\n            { name: 'chainId', value: 1, type: 'number' },\n            {\n              name: 'data',\n              value: `{\"path\":\"m/44'/60'/0'/0/0\",\"metamaskV4Compat\":true,\"data\":{\"domain\":{\"name\":\"Franklin\",\"version\":\"0.0.1\",\"chainId\":1,\"verifyingContract\":\"0x0000000000000000000000000000000000000000\"},\"primaryType\":\"ForwardRequest\",\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"ForwardRequest\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"gas\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"VerifyWallet\":[{\"name\":\"contents\",\"type\":\"string\"}]},\"message\":{\"from\":\"0x0000000000000000000000000000000000000000\",\"to\":\"0x0000000000000000000000000000000000000000\",\"value\":0,\"gas\":275755,\"nonce\":3,\"data\":\"0xbe75bdba000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000000090000000000000000000000004b9eaa3f239cf3d891642454e46c165e55000a0d000000000000000000000000274ff28fcba6241bec8b175a2028f45f7b39d94a0000000000000000000000004abadc9a1db6fabad4b5472f0f22c84f868c3c4e000000000000000000000000871608cba092105b91e91295a1d79ffc539bfb48000000000000000000000000146fe4091f9ebcef37f407c0e87b01edcae24c110000000000000000000000003007cee9a49793ae53ff8158e362cc0a2073365a0000000000000000000000006d05723bd4f3b0446920a5bf0e89102b491a8c1e000000000000000000000000f680347c58c9ee6c4f0d9cdd0849777b978c8ce2000000000000000000000000e8c8f12ccb61fd25ecc5e391e99f69a971526c990000000000000000000000000000000000000000000000000000000000000009000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000df84758000000000000000000000000000000000000000000000000000000000b2d05e00000000000000000000000000000000000000000000000000000000001dcd650000000000000000000000000000000000000000000000000000000000ee6b2800000000000000000000000000000000000000000000000000000000001dcd650000000000000000000000000000000000000000000000000000000000b2d05e0000000000000000000000000000000000000000000000000000000000df8475800000000000000000000000000000000000000000000000000000000077359400000000000000000000000000000000000000000000000000000000002540be40\"}},\"domainHash\":\"e1630040b43761d37578b947e7036afbc20d84c81af8d781275e318f080cc9f9\",\"messageHash\":\"182a9c8090b0facb90c403825fd01a144ce8d0152a8ad785be33e9f8884bd0f5\",\"chainId\":1,\"useEmptyPassphrase\":true,\"connectId\":\"TC01WBD202303160742560002553\",\"deviceId\":\"91CC3D3EDFE355DE7619148C\",\"method\":\"evmSignTypedData\"}`,\n              type: 'string',\n            },\n          ]}\n          onCall={(data: any) =>\n            SDK.evmSignTypedData(connectId, deviceId, {\n              ...commonParams,\n              ...JSON.parse(data.data),\n              path: data.path,\n              chainId: Number(data.chainId ?? 1),\n            } as unknown as any)\n          }\n        />\n        <MethodInvoke\n          title=\"evmVerifyMessage\"\n          options={[\n            {\n              name: 'address',\n              value: '0xdA0b608bdb1a4A154325C854607c68950b4F1a34',\n              type: 'string',\n            },\n            {\n              name: 'messageHex',\n              value: '4578616d706c65206d657373616765', // 'example message'\n              type: 'string',\n            },\n            {\n              name: 'signature',\n              value:\n                '11dc86c631ef5d9388c5e245501d571b864af1a717cbbb3ca1f6dacbf330742957242aa52b36bbe7bb46dce6ff0ead0548cc5a5ce76d0aaed166fd40cb3fc6e51c', // 'Example message'\n              type: 'string',\n            },\n            { name: 'chainId', value: 1, type: 'number' },\n          ]}\n          onCall={(data: any) =>\n            SDK.evmVerifyMessage(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n              chainId: Number(data.chainId ?? 1),\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi, PROTO } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallBTCMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nconst DEFAULT_COIN_TYPE = '0';\nconst CoinMap = {\n  0: 'btc',\n  2: 'ltc',\n  3: 'doge',\n  145: 'bch',\n};\n// const DEFAULT_PATH = `m/44'/${DEFAULT_COIN_TYPE}'/0'/0/0`;\nconst DEFAULT_PATH = `m/86'/${DEFAULT_COIN_TYPE}'/0'/0/0`;\n\nexport function CallBTCMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallBTCMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>BTC Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"btcGetAddress\"\n          options={[\n            { name: 'path', value: DEFAULT_PATH, type: 'string' },\n            { name: 'coin', value: CoinMap[DEFAULT_COIN_TYPE], type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n            { name: 'multisig', value: undefined, type: 'string' },\n            { name: 'scriptType', value: undefined, type: 'string' },\n          ]}\n          onCall={data => SDK.btcGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"btcGetPublicKey\"\n          options={[\n            { name: 'path', value: DEFAULT_PATH, type: 'string' },\n            { name: 'coin', value: CoinMap[DEFAULT_COIN_TYPE], type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n            { name: 'scriptType', value: undefined, type: 'string' },\n          ]}\n          onCall={data => SDK.btcGetPublicKey(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"btcSignMessage\"\n          options={[\n            { name: 'path', value: DEFAULT_PATH, type: 'string' },\n            { name: 'coin', value: CoinMap[DEFAULT_COIN_TYPE], type: 'string' },\n            {\n              name: 'messageHex',\n              value: '6578616d706c65206d657373616765', // 'example message'\n              type: 'string',\n            },\n            { name: 'noScriptType', value: false, type: 'boolean' },\n          ]}\n          onCall={data =>\n            SDK.btcSignMessage(connectId, deviceId, { ...commonParams, ...data } as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"btcVerifyMessage\"\n          options={[\n            { name: 'address', value: 'DAZQi2vRPKEoC9RHTcKkXPemTz7uGd5ucC', type: 'string' },\n            { name: 'coin', value: CoinMap[DEFAULT_COIN_TYPE], type: 'string' },\n            {\n              name: 'messageHex',\n              value: '0x6578616d706c65206d657373616765', // 'example message'\n              type: 'string',\n            },\n            {\n              name: 'signature',\n              value:\n                '0x24eeef2f7b4e075a90c9f49e2152ef744c3d1b5b42bcbfa5363efc5c3015338b7a529b400ecde45c34cedbed9978438b14be3ffb09be041752a68de46f70a7b1ab',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.btcVerifyMessage(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"btcSignTransaction\"\n          options={[{ name: 'coin', value: 'test', type: 'string' }]}\n          onCall={data =>\n            SDK.btcSignTransaction(connectId, deviceId, {\n              inputs: [\n                {\n                  address_n: [2147483692, 2147483648, 2147483648, 0, 0],\n                  prev_hash: '31287e47ceeacf2ee1797a08413e8d6431fb08fd14fd7d0c5134e99fbc16f0c4',\n                  prev_index: 0,\n                  amount: '1058412',\n                },\n              ],\n              outputs: [\n                {\n                  address_n: [2147483692, 2147483648, 2147483648, 0, 0],\n                  amount: '500000',\n                  script_type: 'PAYTOADDRESS',\n                },\n                {\n                  address: 'mnQv1Ty6iGNSmn3Fttdc3e5tqHn88gtJ6t',\n                  amount: '100000',\n                  script_type: 'PAYTOADDRESS',\n                },\n              ],\n              refTxs: [\n                {\n                  hash: '31287e47ceeacf2ee1797a08413e8d6431fb08fd14fd7d0c5134e99fbc16f0c4',\n                  inputs: [\n                    {\n                      prev_hash: '4380a32516a57fd5bb5634436a5113449f451ab6ab8f180ce287e2a526299676',\n                      prev_index: 1,\n                      script_sig: '',\n                      sequence: 4294967294,\n                    },\n                  ],\n                  bin_outputs: [\n                    {\n                      amount: 1058412,\n                      script_pubkey: '76a9140b535ee6a35c99cf2b65953ba3e84ef981b60cf688ac',\n                    },\n                    {\n                      amount: 2797469652,\n                      script_pubkey: '76a9144ba479f8fabb30a5c83a70922e4172675b4393b988ac',\n                    },\n                  ],\n                  lock_time: 2254775,\n                  version: 2,\n                },\n              ],\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallDeviceMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n};\n\nexport function CallDeviceMethods({ SDK, selectedDevice: currentDevice }: CallDeviceMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Device Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke title=\"getFeatures\" options={[]} onCall={() => SDK.getFeatures(connectId)} />\n        <MethodInvoke\n          title=\"getPassphraseState\"\n          options={[]}\n          onCall={() => SDK.getPassphraseState(connectId)}\n        />\n        <MethodInvoke\n          title=\"deviceBackup\"\n          options={[]}\n          onCall={() => SDK.deviceBackup(connectId)}\n        />\n        <MethodInvoke\n          title=\"deviceChangePin\"\n          options={[{ name: 'remove', value: undefined, type: 'boolean' }]}\n          onCall={data => SDK.deviceChangePin(connectId, { ...data })}\n        />\n        <MethodInvoke\n          title=\"deviceFlags\"\n          options={[{ name: 'flags', value: undefined, type: 'number' }]}\n          onCall={data => SDK.deviceFlags(connectId, { ...data })}\n        />\n        <MethodInvoke\n          title=\"deviceRebootToBootloader\"\n          options={[]}\n          onCall={() => SDK.deviceRebootToBootloader(connectId)}\n        />\n        <MethodInvoke\n          title=\"deviceRebootToBoardloader\"\n          options={[]}\n          onCall={() => SDK.deviceRebootToBoardloader(connectId)}\n        />\n        <MethodInvoke\n          title=\"deviceUpdateReboot\"\n          options={[]}\n          onCall={() => SDK.deviceUpdateReboot(connectId)}\n        />\n        <MethodInvoke\n          title=\"deviceRecovery\"\n          options={[\n            { name: 'wordCount', value: undefined, type: 'number' },\n            { name: 'passphraseProtection', value: undefined, type: 'boolean' },\n            { name: 'pinProtection', value: undefined, type: 'boolean' },\n            { name: 'language', value: undefined, type: 'string' },\n            { name: 'label', value: undefined, type: 'string' },\n            { name: 'enforceWordlist', value: undefined, type: 'boolean' },\n            { name: 'type', value: undefined, type: 'string' },\n            { name: 'u2fCounter', value: undefined, type: 'number' },\n            { name: 'dryRun', value: undefined, type: 'boolean' },\n          ]}\n          onCall={data => SDK.deviceRecovery(connectId, { ...data })}\n        />\n        <MethodInvoke\n          title=\"deviceReset\"\n          options={[\n            { name: 'displayRandom', value: undefined, type: 'boolean' },\n            { name: 'strength', value: undefined, type: 'number' },\n            { name: 'passphraseProtection', value: undefined, type: 'boolean' },\n            { name: 'pinProtection', value: undefined, type: 'boolean' },\n            { name: 'language', value: undefined, type: 'string' },\n            { name: 'label', value: undefined, type: 'string' },\n            { name: 'u2fCounter', value: undefined, type: 'number' },\n            { name: 'skipBackup', value: undefined, type: 'boolean' },\n            { name: 'noBackup', value: undefined, type: 'boolean' },\n            { name: 'backupType', value: undefined, type: 'string' },\n          ]}\n          onCall={data => SDK.deviceReset(connectId, { ...data })}\n        />\n        <MethodInvoke\n          title=\"deviceSettings\"\n          options={[\n            { name: 'language', value: undefined, type: 'string' },\n            { name: 'label', value: undefined, type: 'string' },\n            { name: 'usePassphrase', value: undefined, type: 'boolean' },\n            { name: 'homescreen', value: undefined, type: 'string' },\n            { name: 'passphraseSource', value: undefined, type: 'number' },\n            { name: 'autoLockDelayMs', value: undefined, type: 'number' },\n            { name: 'displayRotation', value: undefined, type: 'number' },\n            { name: 'passphraseAlwaysOnDevice', value: undefined, type: 'boolean' },\n            { name: 'safetyChecks', value: undefined, type: 'number' },\n            { name: 'experimentalFeatures', value: undefined, type: 'boolean' },\n          ]}\n          onCall={data =>\n            SDK.deviceSettings(connectId, {\n              ...data,\n              safetyChecks: +data.safetyChecks,\n            } as unknown as any)\n          }\n        />\n        <MethodInvoke\n          title=\"deviceVerify\"\n          options={[{ name: 'dataHex', value: '36d5e8bb396f4497c5cb876cac5c7fe1', type: 'string' }]}\n          onCall={data => SDK.deviceVerify(connectId, { ...data } as unknown as any)}\n        />\n        <MethodInvoke title=\"deviceWipe\" options={[]} onCall={() => SDK.deviceWipe(connectId)} />\n        <MethodInvoke\n          title=\"deviceSupportFeatures\"\n          options={[]}\n          onCall={() => SDK.deviceSupportFeatures(connectId)}\n        />\n        <MethodInvoke\n          title=\"deviceUpdateBootloader\"\n          options={[]}\n          onCall={() => SDK.deviceUpdateBootloader(connectId)}\n        />\n        <MethodInvoke\n          title=\"checkBridgeStatus\"\n          options={[]}\n          onCall={() => SDK.checkBridgeStatus()}\n        />{' '}\n        <MethodInvoke\n          title=\"checkTransportRelease\"\n          options={[]}\n          onCall={() => SDK.checkTransportRelease()}\n        />\n        <MethodInvoke\n          title=\"checkFirmwareRelease\"\n          options={[]}\n          onCall={() => SDK.checkFirmwareRelease(connectId)}\n        />\n        <MethodInvoke\n          title=\"checkBLEFirmwareRelease\"\n          options={[]}\n          onCall={() => SDK.checkBLEFirmwareRelease(connectId)}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi, PROTO } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallStarcoinMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallStarcoinMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallStarcoinMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Starcoin Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"starcoinGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/101010'/0'/0'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.starcoinGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"starcoinGetPublicKey\"\n          options={[\n            { name: 'path', value: \"m/44'/101010'/0'/0'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data =>\n            SDK.starcoinGetPublicKey(connectId, deviceId, { ...commonParams, ...data })\n          }\n        />\n\n        <MethodInvoke\n          title=\"starcoinSignMessage\"\n          options={[\n            { name: 'path', value: \"m/44'/101010'/0'/0'/0'\", type: 'string' },\n            {\n              name: 'messageHex',\n              value: '6578616d706c65206d657373616765', // 'example message'\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.starcoinSignMessage(connectId, deviceId, { ...commonParams, ...data })\n          }\n        />\n\n        <MethodInvoke\n          title=\"starcoinVerifyMessage\"\n          options={[\n            {\n              name: 'publicKey',\n              value: 'cf90aea8962229869bcba527f0cf0de73ad4c22fe27ad2875007e967db7056f5',\n              type: 'string',\n            },\n            {\n              name: 'messageHex',\n              value: '0x6578616d706c65206d657373616765', // 'example message'\n              type: 'string',\n            },\n            {\n              name: 'signature',\n              value:\n                '447d2c3131c32d176106482d8fc780d933f13b37b0f06beee27de5e73a945e8c807f7764d269a196306f53383a26ab632913f4076457e3230b9defafe1c6ba0b',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.starcoinVerifyMessage(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"starcoinSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/101010'/0'/0'/0'\", type: 'string' },\n            { name: 'rawTx', value: undefined, type: 'string' },\n          ]}\n          onCall={data =>\n            SDK.starcoinSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallNEMMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallNEMMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallNEMMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>NEM Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"nemGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/43'/2'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.nemGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"nemSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/1'/0'/0'/0'\", type: 'string' },\n            { name: 'transaction.amount', value: 2000000, type: 'number' },\n            {\n              name: 'transaction.recipient',\n              value: 'TALICE2GMA34CXHD7XLJQ536NM5UNKQHTORNNT2J',\n              type: 'string',\n            },\n            { name: 'transaction.timeStamp', value: 74649215, type: 'number' },\n            { name: 'transaction.type', value: 257, type: 'number' },\n            { name: 'transaction.fee', value: 2000000, type: 'number' },\n            { name: 'transaction.deadline', value: 74735615, type: 'number' },\n            // eslint-disable-next-line no-bitwise\n            { name: 'transaction.version', value: -1744830464, type: 'number' },\n          ]}\n          onCall={data =>\n            SDK.nemSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              // @ts-expect-error\n              path: data.path,\n              transaction: {\n                // @ts-expect-error\n                ...data.transaction,\n                message: {\n                  payload: '746573745f6e656d5f7472616e73616374696f6e5f7472616e73666572',\n                  type: 1,\n                },\n              },\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallSolanaMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallSolanaMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallSolanaMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Solana Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"solGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/501'/0'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.solGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"solSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/501'/0'/0'\", type: 'string' },\n            {\n              name: 'rawTx',\n              value:\n                '4301355cc18d85809872bcbd63cb6ea5ac3c2814a1bacf2e50d8ec62367211917b79ecd1f1a98fa0d793d7cb92ebd9a479dc6aba0ae8570253aa87c0da32db5ed2bd401f3bbee52c2bc55761fd8486fae2e28f46499282f4267b8b90fc8c1cc97bb659b6cc927f2ec1701ef2928ddb84759ba5c557f549db',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.solSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallStellarMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallStellarMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallStellarMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Stellar Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"stellarGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/148'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.stellarGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"stellarSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/148'/0'\", type: 'string' },\n            {\n              name: 'networkPassphrase',\n              value: 'Test SDF Network ; September 2015',\n              type: 'string',\n            },\n            {\n              name: 'transaction.source',\n              value: 'GAXSFOOGF4ELO5HT5PTN23T5XE6D5QWL3YBHSVQ2HWOFEJNYYMRJENBV',\n              type: 'string',\n            },\n            { name: 'transaction.fee', value: 100, type: 'number' },\n            { name: 'transaction.sequence', value: 4294967296, type: 'number' },\n          ]}\n          onCall={data =>\n            SDK.stellarSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              // @ts-expect-error\n              path: data.path,\n              // @ts-expect-error\n              networkPassphrase: data.networkPassphrase,\n              transaction: {\n                // @ts-expect-error\n                ...data.transaction,\n                memo: {\n                  type: 0,\n                },\n                operations: [\n                  {\n                    type: 'payment',\n                    source: 'GAXSFOOGF4ELO5HT5PTN23T5XE6D5QWL3YBHSVQ2HWOFEJNYYMRJENBV',\n                    destination: 'GAXSFOOGF4ELO5HT5PTN23T5XE6D5QWL3YBHSVQ2HWOFEJNYYMRJENBV',\n                    amount: '10000',\n                    asset: {\n                      type: 'NATIVE',\n                    },\n                  },\n                ],\n              },\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallOtherMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n};\n\nexport function CallOtherMethods({ SDK, selectedDevice: currentDevice }: CallOtherMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Other Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"cipherKeyValue\"\n          options={[\n            { name: 'path', value: \"m/49'/0'/0'\", type: 'string' },\n            {\n              name: 'key',\n              value: 'This text is displayed on OneKey during encrypt',\n              type: 'string',\n            },\n            { name: 'value', value: '1c0ffeec0ffeec0ffeec0ffeec0ffee1', type: 'string' },\n            { name: 'encrypt', value: true, type: 'boolean' },\n            { name: 'askOnEncrypt', value: true, type: 'boolean' },\n            { name: 'askOnDecrypt', value: true, type: 'boolean' },\n            { name: 'iv', value: undefined, type: 'string' },\n          ]}\n          onCall={data => SDK.cipherKeyValue(connectId, deviceId, { ...data })}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallTronMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallTronMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallTronMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Tron Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"tronGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/195'/0'/0/0\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.tronGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"tronSignMessage\"\n          options={[\n            { name: 'path', value: \"m/44'/195'/0'/0/0\", type: 'string' },\n            { name: 'messageHex', value: '0x6578616d706c65206d657373616765', type: 'string' },\n          ]}\n          onCall={data =>\n            SDK.tronSignMessage(connectId, deviceId, { ...commonParams, ...data } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"tronSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/195'/0'/0/0\", type: 'string' },\n            {\n              name: 'transaction.refBlockBytes',\n              value: 'ddf1',\n              type: 'string',\n            },\n            {\n              name: 'transaction.refBlockHash',\n              value: 'd04764f22469a0b8',\n              type: 'string',\n            },\n            {\n              name: 'transaction.data',\n              value: undefined,\n              type: 'string',\n            },\n            {\n              name: 'transaction.feeLimit',\n              value: undefined,\n              type: 'number',\n            },\n            { name: 'transaction.expiration', value: 1655692140000, type: 'number' },\n            { name: 'transaction.timestamp', value: 1655692083406, type: 'number' },\n          ]}\n          onCall={data =>\n            SDK.tronSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              // @ts-expect-error\n              path: data.path,\n              transaction: {\n                // @ts-expect-error\n                ...data.transaction,\n                contract: {\n                  transferContract: {\n                    toAddress: 'TXrs7yxQLNzig7J9EbKhoEiUp6kWpdWKnD',\n                    amount: 100,\n                  },\n                },\n              },\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"tronSignTransaction TRC20\"\n          options={[\n            { name: 'path', value: \"m/44'/195'/0'/0/0\", type: 'string' },\n            {\n              name: 'transaction.refBlockBytes',\n              value: 'f37c',\n              type: 'string',\n            },\n            {\n              name: 'transaction.refBlockHash',\n              value: 'aadfb347dabb84de',\n              type: 'string',\n            },\n            {\n              name: 'transaction.data',\n              value: undefined,\n              type: 'string',\n            },\n            {\n              name: 'transaction.feeLimit',\n              value: 1000000,\n              type: 'number',\n            },\n            { name: 'transaction.expiration', value: 1657770198000, type: 'number' },\n            { name: 'transaction.timestamp', value: 1657770139291, type: 'number' },\n          ]}\n          onCall={data =>\n            SDK.tronSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              // @ts-expect-error\n              path: data.path,\n              transaction: {\n                // @ts-expect-error\n                ...data.transaction,\n                contract: {\n                  triggerSmartContract: {\n                    contractAddress: 'TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t',\n                    data: 'a9059cbb000000000000000000000000f01fad0beb95a0a41cb1e68f384b33b846fe7d830000000000000000000000000000000000000000000000000000000000000001',\n                  },\n                },\n              },\n            } as unknown as any)\n          }\n        />\n        <MethodInvoke\n          title=\"tronSignTransaction Stake\"\n          options={[\n            { name: 'path', value: \"m/44'/195'/0'/0/0\", type: 'string' },\n            { name: 'resource', value: 0, type: 'number' },\n            {\n              name: 'transaction.refBlockBytes',\n              value: 'f37c',\n              type: 'string',\n            },\n            {\n              name: 'transaction.refBlockHash',\n              value: 'aadfb347dabb84de',\n              type: 'string',\n            },\n            {\n              name: 'transaction.data',\n              value: undefined,\n              type: 'string',\n            },\n            {\n              name: 'transaction.feeLimit',\n              value: 1000000,\n              type: 'number',\n            },\n            { name: 'transaction.expiration', value: 1657770198000, type: 'number' },\n            { name: 'transaction.timestamp', value: 1657770139291, type: 'number' },\n          ]}\n          onCall={data =>\n            SDK.tronSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              // @ts-expect-error\n              path: data.path,\n              transaction: {\n                // @ts-expect-error\n                ...data.transaction,\n                contract: {\n                  freezeBalanceV2Contract: {\n                    frozenBalance: 100,\n                    // @ts-expect-error\n                    resource: data.resource,\n                  },\n                },\n              },\n            } as unknown as any)\n          }\n        />\n        <MethodInvoke\n          title=\"tronSignTransaction Unstake\"\n          options={[\n            { name: 'path', value: \"m/44'/195'/0'/0/0\", type: 'string' },\n            { name: 'resource', value: 0, type: 'number' },\n            {\n              name: 'transaction.refBlockBytes',\n              value: 'f37c',\n              type: 'string',\n            },\n            {\n              name: 'transaction.refBlockHash',\n              value: 'aadfb347dabb84de',\n              type: 'string',\n            },\n            {\n              name: 'transaction.data',\n              value: undefined,\n              type: 'string',\n            },\n            {\n              name: 'transaction.feeLimit',\n              value: 1000000,\n              type: 'number',\n            },\n            { name: 'transaction.expiration', value: 1657770198000, type: 'number' },\n            { name: 'transaction.timestamp', value: 1657770139291, type: 'number' },\n          ]}\n          onCall={data =>\n            SDK.tronSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              // @ts-expect-error\n              path: data.path,\n              transaction: {\n                // @ts-expect-error\n                ...data.transaction,\n                contract: {\n                  unfreezeBalanceV2Contract: {\n                    unfreezeBalance: 100,\n                    // @ts-expect-error\n                    resource: data.resource,\n                  },\n                },\n              },\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallConfluxMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallConfluxMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallConfluxMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Conflux Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"confluxGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/503'/0'/0/0\", type: 'string' },\n            { name: 'chainId', value: undefined, type: 'number' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.confluxGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"confluxSignMessage\"\n          options={[\n            { name: 'path', value: \"m/44'/503'/0'/0/0\", type: 'string' },\n            { name: 'messageHex', value: '0x6578616d706c65206d657373616765', type: 'string' },\n          ]}\n          onCall={data =>\n            SDK.confluxSignMessage(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"confluxSignMessageCIP23\"\n          options={[\n            { name: 'path', value: \"m/44'/503'/0'/0/0\", type: 'string' },\n            {\n              name: 'domainHash',\n              value: '7c872d109a4e735dc1886c72af47e9b4888a1507557e0f49c85b570019163373',\n              type: 'string',\n            },\n            {\n              name: 'messageHash',\n              value: '0x07bc1c4f3268fc74b60587e9bb7e01e38a7d8a9a3f51202bf25332aa2c75c644',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.confluxSignMessageCIP23(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n\n        <MethodInvoke\n          title=\"confluxSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/503'/0'/0/0\", type: 'string' },\n            {\n              name: 'transaction.to',\n              value: '0x7314e0f1c0e28474bdb6be3e2c3e0453255188f8',\n              type: 'string',\n            },\n            {\n              name: 'transaction.value',\n              value: '0xf4240',\n              type: 'string',\n            },\n            {\n              name: 'transaction.data',\n              value: '0x01',\n              type: 'string',\n            },\n            {\n              name: 'transaction.chainId',\n              value: 1,\n              type: 'number',\n            },\n            {\n              name: 'transaction.nonce',\n              value: '0x00',\n              type: 'string',\n            },\n            {\n              name: 'transaction.epochHeight',\n              value: '0x00',\n              type: 'string',\n            },\n            {\n              name: 'transaction.gasLimit',\n              value: '0x5208',\n              type: 'string',\n            },\n            {\n              name: 'transaction.storageLimit',\n              value: '0x5208',\n              type: 'string',\n            },\n            {\n              name: 'transaction.gasPrice',\n              value: '0xbebc200',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.confluxSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallNearMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallNearMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallNearMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Near Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"nearGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/397'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.nearGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"nearSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/397'/0'\", type: 'string' },\n            {\n              name: 'rawTx',\n              value:\n                '400000003630323130393034396561313633656561326634386365616238303634363932373538323730323938333863666163303865633463363330303431353639613600602109049ea163eea2f48ceab806469275827029838cfac08ec4c630041569a644255eea2d4200004000000034376464643364346536393632343535386266313135643438313763336566303861386264393864313832666466666637373465353065643937626637626437d2a5c8e15cadc0476f5f07a02b2a3b9c1699847996b1bc55142b881a3ff1accd010000000301000000000000000000000000000000',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.nearSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallAptosMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallAptosMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallAptosMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Aptos Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"aptosGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/637'/0'/0'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.aptosGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"aptosGetAddress [bundle]\"\n          options={[]}\n          onCall={data =>\n            SDK.aptosGetAddress(connectId, deviceId, {\n              ...commonParams,\n              bundle: [\n                { path: \"m/44'/637'/0'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/637'/1'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/637'/2'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/637'/3'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/637'/4'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/637'/5'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/637'/6'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/637'/7'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/637'/8'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/637'/9'/0'/0'\", showOnOneKey: false },\n              ],\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"AptosGetPublicKey\"\n          options={[\n            { name: 'path', value: \"m/44'/637'/0'/0'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.aptosGetPublicKey(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"AptosSignMessage\"\n          options={[\n            { name: 'path', value: \"m/44'/637'/0'/0'/0'\", type: 'string' },\n            { name: 'payload.address', value: undefined, type: 'string' },\n            { name: 'payload.chainId', value: undefined, type: 'string' },\n            { name: 'payload.application', value: undefined, type: 'string' },\n            { name: 'payload.nonce', value: '12345', type: 'string' },\n            { name: 'payload.message', value: 'hello', type: 'string' },\n          ]}\n          onCall={data =>\n            SDK.aptosSignMessage(connectId, deviceId, {\n              ...commonParams,\n              ...(data as unknown as any),\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"aptosSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/637'/0'/0'/0'\", type: 'string' },\n            {\n              name: 'rawTx',\n              value:\n                '4301355cc18d85809872bcbd63cb6ea5ac3c2814a1bacf2e50d8ec62367211917b79ecd1f1a98fa0d793d7cb92ebd9a479dc6aba0ae8570253aa87c0da32db5ed2bd401f3bbee52c2bc55761fd8486fae2e28f46499282f4267b8b90fc8c1cc97bb659b6cc927f2ec1701ef2928ddb84759ba5c557f549db',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.aptosSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallAlgoMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallAlgoMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallAlgoMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Algo Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"algoGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/283'/0'/0'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.algoGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"algoSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/283'/0'/0'/0'\", type: 'string' },\n            {\n              name: 'rawTx',\n              value:\n                '4301355cc18d85809872bcbd63cb6ea5ac3c2814a1bacf2e50d8ec62367211917b79ecd1f1a98fa0d793d7cb92ebd9a479dc6aba0ae8570253aa87c0da32db5ed2bd401f3bbee52c2bc55761fd8486fae2e28f46499282f4267b8b90fc8c1cc97bb659b6cc927f2ec1701ef2928ddb84759ba5c557f549db',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.algoSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallCosmosMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallCosmosMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallCosmosMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Cosmos Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"cosmosGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/118'/0'/0/0\", type: 'string' },\n            { name: 'hrp', value: undefined, type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.cosmosGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"cosmosGetPublicKey\"\n          options={[\n            { name: 'path', value: \"m/44'/118'/0'/0/0\", type: 'string' },\n            { name: 'curve', value: 'secp256k1', type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.cosmosGetPublicKey(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"cosmosSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/118'/0'/0/0\", type: 'string' },\n            {\n              name: 'rawTx',\n              value:\n                '4301355cc18d85809872bcbd63cb6ea5ac3c2814a1bacf2e50d8ec62367211917b79ecd1f1a98fa0d793d7cb92ebd9a479dc6aba0ae8570253aa87c0da32db5ed2bd401f3bbee52c2bc55761fd8486fae2e28f46499282f4267b8b90fc8c1cc97bb659b6cc927f2ec1701ef2928ddb84759ba5c557f549db',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.cosmosSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallXrpMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallXrpMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallXrpMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>XRP Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"xrpGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/144'/0'/0/0\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.xrpGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"xrpSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/144'/1'/0/0\", type: 'string' },\n            {\n              name: 'fee',\n              value: '12',\n              type: 'string',\n            },\n            {\n              name: 'flags',\n              value: 0,\n              type: 'number',\n            },\n            {\n              name: 'sequence',\n              value: 32841006,\n              type: 'number',\n            },\n            {\n              name: 'maxLedgerVersion',\n              value: 32841630,\n              type: 'number',\n            },\n            {\n              name: 'amount',\n              value: 1000000,\n              type: 'number',\n            },\n            {\n              name: 'destination',\n              value: 'rwgumKP89VhMrJ4dRkGVS4tafRfAmZmKf8',\n              type: 'string',\n            },\n          ]}\n          onCall={(data: any) =>\n            SDK.xrpSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              path: data.path,\n              transaction: {\n                fee: data.fee,\n                flags: data.flags,\n                sequence: data.sequence,\n                maxLedgerVersion: data.maxLedgerVersion,\n                payment: {\n                  amount: data.amount,\n                  destination: data.destination,\n                },\n              },\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallSuiMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallSuiMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallSuiMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Sui Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"suiGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/784'/0'/0'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.suiGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"suiGetAddress [bundle]\"\n          options={[]}\n          onCall={data =>\n            SDK.suiGetAddress(connectId, deviceId, {\n              ...commonParams,\n              bundle: [\n                { path: \"m/44'/784'/0'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/784'/1'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/784'/2'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/784'/3'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/784'/4'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/784'/5'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/784'/6'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/784'/7'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/784'/8'/0'/0'\", showOnOneKey: false },\n                { path: \"m/44'/784'/9'/0'/0'\", showOnOneKey: false },\n              ],\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"suiGetPublicKey\"\n          options={[\n            { name: 'path', value: \"m/44'/784'/0'/0'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.suiGetPublicKey(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"suiSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/784'/0'/0'/0'\", type: 'string' },\n            {\n              name: 'rawTx',\n              value:\n                '5472616e73616374696f6e446174613a3a0005012da3a446433920a4a290f834710575bd943631de0200000000000000207a7b5943ca4bfa227033fa7c6ddb452c7f7f8a18f73f1058b4ac07a14d22e0a5017cb14a7a318219299f008f31e977808c96e372a60140420f0000000000c68311c708918b26fa85b4ded86977baf81086872da3a446433920a4a290f834710575bd943631de0200000000000000207a7b5943ca4bfa227033fa7c6ddb452c7f7f8a18f73f1058b4ac07a14d22e0a501000000000000007a00000000000000',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.suiSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport { CardanoAddressType } from '@onekeyfe/hd-transport';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallCardanoMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallCardanoMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallCardanoMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Cardano Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"CardanoGetAddress\"\n          options={[\n            { name: 'addressType', value: 0, type: 'number' },\n            { name: 'path', value: `m/1852'/1815'/0'/0/0`, type: 'string' },\n            { name: 'stakingPath', value: `m/1852'/1815'/0'/2/0`, type: 'string' },\n            { name: 'stakingKeyHash', value: '', type: 'string' },\n            { name: 'paymentScriptHash', value: '', type: 'string' },\n            { name: 'stakingScriptHash', value: '', type: 'string' },\n            { name: 'networkId', value: 1, type: 'number' },\n            { name: 'protocolMagic', value: 764824073, type: 'number' },\n            { name: 'derivationType', value: 1, type: 'number' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n            { name: 'isCheck', value: false, type: 'boolean' },\n          ]}\n          // addr1qxfzjswzujgvn70cwpkxdal5dddtasjrljmx8upgzlaehqa2vx9039emchclmwwfmwtar32lp4x558nr8wa3f26rkn7qwne3ad\n          // m/1852'/1815'/0'/0/0\n          onCall={(data: any) =>\n            SDK.cardanoGetAddress(connectId, deviceId, {\n              ...commonParams,\n              ...{\n                addressParameters: {\n                  addressType: data.addressType,\n                  path: data.path,\n                  stakingPath: data.stakingPath,\n                  stakingKeyHash: data.stakingKeyHash || undefined,\n                  paymentScriptHash: data.paymentScriptHash || undefined,\n                  stakingScriptHash: data.stakingScriptHash || undefined,\n                },\n                protocolMagic: data.protocolMagic,\n                networkId: data.networkId,\n                derivationType: Number(data.derivationType),\n                address: data.address,\n                showOnOneKey: data.showOnOneKey,\n                isCheck: data.isCheck,\n              },\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"CardanoGetPublicKey\"\n          options={[\n            { name: 'path', value: \"m/1852'/1815'/0'\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n            { name: 'derivationType', value: 2, type: 'number' },\n          ]}\n          onCall={data =>\n            SDK.cardanoGetPublicKey(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"CardanoSignTransaction\"\n          options={[\n            {\n              name: 'tip',\n              value: 'The parameters are too complicated, please use the source code to debug',\n              type: 'string',\n            },\n          ]}\n          onCall={(data: any) => {\n            const params = {\n              signingMode: 0,\n              inputs: [\n                {\n                  path: \"m/1852'/1815'/0'/0/0\",\n                  prev_hash: '311940642e2f1ee1029a59c05f83c78fc27cc8a52bfd1e65721800dd8b026dec',\n                  prev_index: 0,\n                },\n                {\n                  path: \"m/1852'/1815'/0'/0/0\",\n                  prev_hash: '416538899e722e49c5a3670461d2bc6ce8aea8b307fae8bcec39d0019ee3c3d0',\n                  prev_index: 0,\n                },\n                {\n                  path: \"m/1852'/1815'/0'/0/0\",\n                  prev_hash: '416538899e722e49c5a3670461d2bc6ce8aea8b307fae8bcec39d0019ee3c3d0',\n                  prev_index: 1,\n                },\n              ],\n              outputs: [\n                {\n                  address:\n                    'addr1qxfzjswzujgvn70cwpkxdal5dddtasjrljmx8upgzlaehqa2vx9039emchclmwwfmwtar32lp4x558nr8wa3f26rkn7qwne3ad',\n                  amount: '2613231',\n                },\n                {\n                  addressParameters: {\n                    path: \"m/1852'/1815'/0'/0/0\",\n                    addressType: 0,\n                    stakingPath: \"m/1852'/1815'/0'/2/0\",\n                  },\n                  amount: '1222487',\n                  tokenBundle: [\n                    {\n                      policyId: '29d222ce763455e3d7a09a665ce554f00ac89d2e99a1a83d267170c6',\n                      tokenAmounts: [{ assetNameBytes: '4d494e', amount: '27828472' }],\n                    },\n                  ],\n                },\n              ],\n              fee: '177513',\n              protocolMagic: 764824073,\n              networkId: 1,\n              derivationType: 2,\n            };\n            return SDK.cardanoSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...params,\n            } as unknown as any);\n          }}\n        />\n\n        <MethodInvoke\n          title=\"CardanoSignMessage\"\n          options={[\n            { name: 'path', value: \"m/1852'/1815'/0'\", type: 'string' },\n            { name: 'message', value: 'hello world', type: 'string' },\n            { name: 'derivationType', value: 1, type: 'number' },\n            { name: 'networkId', value: 1, type: 'number' },\n          ]}\n          onCall={data =>\n            SDK.cardanoSignMessage(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallFilecoinMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallFilecoinMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallFilecoinMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Filecoin Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"filecoinGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/461'/0'/0/0\", type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n            { name: 'isTestnet', value: true, type: 'boolean' },\n          ]}\n          onCall={data => SDK.filecoinGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n        <MethodInvoke\n          title=\"filecoinSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/461'/0'/0/0\", type: 'string' },\n            { name: 'isTestnet', value: true, type: 'boolean' },\n            {\n              name: 'rawTx',\n              value:\n                '8a0055015a2fd22d821d5855e401118fef6ea0373dadbde355018ae51a9d6c9fe1872fd31b10c96df89106790297004900016345785d8a00001a0009354445001730ee6e440001865e0040',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.filecoinSignTransaction(connectId, deviceId, { ...commonParams, ...data })\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallPolkadotMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallPolkadotMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallPolkadotMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Polkadot Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"polkadotGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/354'/0'/0'/0'\", type: 'string' },\n            { name: 'prefix', value: '0', type: 'number' },\n            { name: 'network', value: 'polkadot', type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.polkadotGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"polkadotGetAddress [bundle]\"\n          options={[]}\n          onCall={data =>\n            SDK.polkadotGetAddress(connectId, deviceId, {\n              ...commonParams,\n              bundle: [\n                {\n                  path: \"m/44'/354'/0'/0'/0'\",\n                  prefix: 0,\n                  network: 'polkadot',\n                  showOnOneKey: false,\n                },\n                {\n                  path: \"m/44'/354'/1'/0'/0'\",\n                  prefix: 0,\n                  network: 'polkadot',\n                  showOnOneKey: false,\n                },\n                {\n                  path: \"m/44'/354'/2'/0'/0'\",\n                  prefix: 0,\n                  network: 'polkadot',\n                  showOnOneKey: false,\n                },\n                {\n                  path: \"m/44'/354'/3'/0'/0'\",\n                  prefix: 0,\n                  network: 'polkadot',\n                  showOnOneKey: false,\n                },\n                {\n                  path: \"m/44'/354'/4'/0'/0'\",\n                  prefix: 0,\n                  network: 'polkadot',\n                  showOnOneKey: false,\n                },\n                {\n                  path: \"m/44'/354'/5'/0'/0'\",\n                  prefix: 0,\n                  network: 'polkadot',\n                  showOnOneKey: false,\n                },\n                {\n                  path: \"m/44'/354'/6'/0'/0'\",\n                  prefix: 0,\n                  network: 'polkadot',\n                  showOnOneKey: false,\n                },\n                {\n                  path: \"m/44'/354'/7'/0'/0'\",\n                  prefix: 0,\n                  network: 'polkadot',\n                  showOnOneKey: false,\n                },\n                {\n                  path: \"m/44'/354'/8'/0'/0'\",\n                  prefix: 0,\n                  network: 'polkadot',\n                  showOnOneKey: false,\n                },\n                {\n                  path: \"m/44'/354'/9'/0'/0'\",\n                  prefix: 0,\n                  network: 'polkadot',\n                  showOnOneKey: false,\n                },\n              ],\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"polkadotSignTransaction\"\n          options={[\n            { name: 'path', value: \"m/44'/354'/0'/0'/0'\", type: 'string' },\n            {\n              name: 'rawTx',\n              value:\n                '040300388671dd546ba19495211c8cdc200600f9798cf078fca0fb4749ebbc0579c12a0700e40b5402350128009a24000012000000e143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423ee356a704dbe75762aaae87b0f4702aafd09e67eed5d09a3a4b0e7da6c37b6f54',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.polkadotSignTransaction(connectId, deviceId, {\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallKaspaMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallKaspaMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallKaspaMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Sui Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"kaspaGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/111111'/0'/0/0\", type: 'string' },\n            { name: 'prefix', value: 'kaspa', type: 'string' },\n            { name: 'scheme', value: 'schnorr', type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.kaspaGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"kaspaGetAddress [bundle]\"\n          options={[]}\n          onCall={data =>\n            SDK.kaspaGetAddress(connectId, deviceId, {\n              ...commonParams,\n              bundle: [\n                { path: \"m/44'/111111'/0'/0/0\", showOnOneKey: false },\n                { path: \"m/44'/111111'/0'/0/1\", showOnOneKey: false },\n                { path: \"m/44'/111111'/0'/0/2\", showOnOneKey: false },\n                { path: \"m/44'/111111'/0'/0/3\", showOnOneKey: false },\n                { path: \"m/44'/111111'/0'/0/4\", showOnOneKey: false },\n                { path: \"m/44'/111111'/0'/0/5\", showOnOneKey: false },\n                { path: \"m/44'/111111'/0'/0/6\", showOnOneKey: false },\n                { path: \"m/44'/111111'/0'/0/7\", showOnOneKey: false },\n                { path: \"m/44'/111111'/0'/0/8\", showOnOneKey: false },\n                { path: \"m/44'/111111'/0'/0/9\", showOnOneKey: false },\n              ],\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"kaspaSignTransaction\"\n          options={[\n            { name: 'subNetworkID', value: '00000000000000000000000000000000', type: 'string' },\n            { name: 'prefix', value: 'kaspa', type: 'string' },\n            { name: 'scheme', value: 'schnorr', type: 'string' },\n          ]}\n          onCall={data =>\n            SDK.kaspaSignTransaction(connectId, deviceId, {\n              version: 0,\n              lockTime: '0',\n              sigHashType: 0x1,\n              sigOpCount: 1,\n              inputs: [\n                {\n                  outputIndex: 1,\n                  path: \"m/44'/111111'/0'/0/0\",\n                  prevTxId: '1f226507807ff7dc5a7f8f2dec353fffc9dacc2645d8aecd02e5046907e3e2b2',\n                  sequenceNumber: '0',\n                  sigOpCount: 1,\n                  output: {\n                    satoshis: '990096458',\n                    script: '207afdae557e69c0040fd4135adffc60f9486fb21f4cbae233fd6db3e84ba47c55ac',\n                  },\n                },\n              ],\n              outputs: [\n                {\n                  satoshis: '100000000',\n                  script: '205ca3a7530284e5c5e472544edd6002c3afeb8c8f84d3a728fad255a4872753fbac',\n                  scriptVersion: 0,\n                },\n                {\n                  satoshis: '890094182',\n                  script: '207afdae557e69c0040fd4135adffc60f9486fb21f4cbae233fd6db3e84ba47c55ac',\n                  scriptVersion: 0,\n                },\n              ],\n              ...commonParams,\n              ...data,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { CommonParams, CoreApi } from '@onekeyfe/hd-core';\nimport React, { View, StyleSheet, Text } from 'react-native';\nimport type { Device } from './DeviceList';\nimport MethodInvoke from './MethodInvoke';\n\ntype CallNexaMethodsProps = {\n  SDK: CoreApi;\n  selectedDevice: Device | null;\n  commonParams?: CommonParams;\n};\n\nexport function CallNexaMethods({\n  SDK,\n  selectedDevice: currentDevice,\n  commonParams,\n}: CallNexaMethodsProps) {\n  const connectId = currentDevice?.connectId ?? '';\n  const deviceId = currentDevice?.features?.deviceId ?? '';\n  return (\n    <View>\n      <Text style={{ textAlign: 'center', fontSize: 24 }}>Nexa Method Test</Text>\n      <View style={styles.buttonContainer}>\n        <MethodInvoke\n          title=\"NexaGetAddress\"\n          options={[\n            { name: 'path', value: \"m/44'/29223'/0'/0/0\", type: 'string' },\n            { name: 'prefix', value: 'nexatest', type: 'string' },\n            { name: 'scheme', value: 'schnorr', type: 'string' },\n            { name: 'showOnOneKey', value: false, type: 'boolean' },\n          ]}\n          onCall={data => SDK.nexaGetAddress(connectId, deviceId, { ...commonParams, ...data })}\n        />\n\n        <MethodInvoke\n          title=\"NexaGetAddress [bundle]\"\n          options={[]}\n          onCall={_ =>\n            SDK.nexaGetAddress(connectId, deviceId, {\n              ...commonParams,\n              bundle: [\n                { path: \"m/44'/29223'/0'/0/0\", showOnOneKey: false },\n                { path: \"m/44'/29223'/0'/0/1\", showOnOneKey: false },\n                { path: \"m/44'/29223'/0'/0/2\", showOnOneKey: false },\n                { path: \"m/44'/29223'/0'/0/3\", showOnOneKey: false },\n                { path: \"m/44'/29223'/0'/0/4\", showOnOneKey: false },\n                { path: \"m/44'/29223'/0'/0/5\", showOnOneKey: false },\n                { path: \"m/44'/29223'/0'/0/6\", showOnOneKey: false },\n                { path: \"m/44'/29223'/0'/0/7\", showOnOneKey: false },\n                { path: \"m/44'/29223'/0'/0/8\", showOnOneKey: false },\n                { path: \"m/44'/29223'/0'/0/9\", showOnOneKey: false },\n              ],\n            })\n          }\n        />\n\n        <MethodInvoke\n          title=\"NexaSignTransaction\"\n          options={[\n            { name: 'path', value: `m/44'/29223'/0'/0/0`, type: 'string' },\n            { name: 'prefix', value: 'nexatest', type: 'string' },\n            {\n              name: 'message',\n              value:\n                '000578c6c76f10156fbc7ee4a8faa7a4e92b6adadc978abf66ae70f13a03b75d36cd7a6acc0967cc9f2f632f585cb7b4297873858c23233792767fd4ae662ec1093bb13029ce7b1f559ef5e747fcac439f1455a2ec7c5f09b72290795e70665044026cad0dba749a112e0d2ea420fa68e0218453db6bb0744e44eb51edc76af8bb6871190000000000',\n              type: 'string',\n            },\n          ]}\n          onCall={data =>\n            SDK.nexaSignTransaction(connectId, deviceId, {\n              inputs: [\n                {\n                  path: \"m/44'/29223'/0'/0/0\",\n                  message:\n                    '000578c6c76f10156fbc7ee4a8faa7a4e92b6adadc978abf66ae70f13a03b75d36cd7a6acc0967cc9f2f632f585cb7b4297873858c23233792767fd4ae662ec1093bb13029ce7b1f559ef5e747fcac439f1455a2ec7c5f09b72290795e70665044026cad0dba749a112e0d2ea420fa68e0218453db6bb0744e44eb51edc76af8bb6871190000000000',\n                  prefix: 'nexatest',\n                  ...data,\n                },\n              ],\n              ...commonParams,\n            } as unknown as any)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n});\n","import { useEffect, useState } from 'react';\nimport { View, Button, StyleSheet, Platform, Switch, Text, TextInput } from 'react-native';\nimport RNRestart from 'react-native-restart';\nimport {\n  UI_EVENT,\n  UI_REQUEST,\n  CoreMessage,\n  UI_RESPONSE,\n  CoreApi,\n  FIRMWARE_EVENT,\n  DEVICE,\n  CommonParams,\n  KnownDevice,\n  LowLevelCoreApi,\n} from '@onekeyfe/hd-core';\n\nimport { ReceivePin } from './ReceivePin';\nimport { Device, DeviceList } from './DeviceList';\nimport { UploadScreen } from './UploadScreen/index';\nimport { CallEVMMethods } from './CallEVMMethods';\nimport { CallBTCMethods } from './CallBTCMethods';\nimport { CallDeviceMethods } from './CallDeviceMethods';\nimport { CallStarcoinMethods } from './CallStarcoinMethods';\nimport { CallNEMMethods } from './CallNEMMethods';\nimport { CallSolanaMethods } from './CallSolanaMethods';\nimport { CallStellarMethods } from './CallStellarMethods';\nimport { CallOtherMethods } from './CallOtherMethods';\nimport { CallTronMethods } from './CallTronMethods';\nimport { CallConfluxMethods } from './CallConfluxMethods';\nimport { CallNearMethods } from './CallNearMethods';\nimport { CallAptosMethods } from './CallAptosMethods';\nimport { CallAlgoMethods } from './CallAlgoMethods';\nimport { CallCosmosMethods } from './CallCosmosMethods';\nimport { CallXrpMethods } from './CallXrpMethods';\nimport { CallSuiMethods } from './CallSuiMethods';\nimport { CallCardanoMethods } from './CallCardanoMethods';\nimport { CallFilecoinMethods } from './CallFilecoinMethods';\nimport { CallPolkadotMethods } from './CallPolkadotMethods';\nimport { CallKaspaMethods } from './CallKaspaMethods';\nimport { CallNexaMethods } from './CallNexa';\n\nlet registerListener = false;\n\nexport type ICallMethodProps = {\n  HardwareLowLevelSDK?: LowLevelCoreApi;\n  SDK: CoreApi;\n  type: 'Bluetooth' | 'USB';\n};\nexport function CallMethods({ HardwareLowLevelSDK, SDK, type }: ICallMethodProps) {\n  const [showPinInput, setShowPinInput] = useState(false);\n  const [pinValue, setPinValue] = useState('');\n  const [devices, setDevices] = useState<Device[]>([]);\n  const [selectedDevice, setSelectedDevice] = useState<Device | null>(null);\n  const [selectedFile, setSelectedFile] = useState<Uint8Array>();\n  const [firmwareType, setFirmwareType] = useState<boolean>(true);\n\n  const [optionalParams, setOptionalParams] = useState<CommonParams>();\n  const [uploadScreenParams, setUploadScreenParams] = useState<{\n    suffix?: string;\n    file?: File;\n    resType?: number;\n    nftMetaData?: string;\n  }>({\n    resType: 0,\n  });\n\n  useEffect(() => {\n    // 监听 SDK 事件\n    if (registerListener) {\n      return;\n    }\n\n    HardwareLowLevelSDK?.addHardwareGlobalEventListener(params => {\n      SDK.emit?.(params.event, { ...params });\n    });\n\n    SDK.on(UI_EVENT, (message: CoreMessage) => {\n      console.log('TopLEVEL EVENT ===>>>>: ', message);\n      if (message.type === UI_REQUEST.REQUEST_PIN) {\n        // setShowPinInput(true);\n        SDK.uiResponse({\n          type: UI_RESPONSE.RECEIVE_PIN,\n          payload: '@@ONEKEY_INPUT_PIN_IN_DEVICE',\n        });\n      }\n      if (message.type === UI_REQUEST.REQUEST_PASSPHRASE) {\n        setTimeout(() => {\n          SDK.uiResponse({\n            type: UI_RESPONSE.RECEIVE_PASSPHRASE,\n            payload: {\n              value: '',\n              passphraseOnDevice: true,\n              save: false,\n            },\n          });\n        }, 2000);\n      }\n    });\n\n    // SDK.on(LOG_EVENT, (message: CoreMessage) => {\n    //   if (Array.isArray(message.payload)) {\n    //     const msg = message.payload.join(' ');\n    //     console.log('receive log event: ', msg);\n    //   }\n    // });\n\n    SDK.on(FIRMWARE_EVENT, (message: CoreMessage) => {\n      console.log('example get firmware event: ', message);\n    });\n\n    SDK.on(DEVICE.FEATURES, (message: CoreMessage) => {\n      console.log('example get features event: ', message);\n    });\n\n    SDK.on(DEVICE.CONNECT, (message: CoreMessage) => {\n      console.log('example get connect event: ', message);\n    });\n\n    SDK.on(DEVICE.DISCONNECT, (message: CoreMessage) => {\n      console.log('example get disconnect event: ', message);\n    });\n    registerListener = true;\n  }, [SDK, HardwareLowLevelSDK]);\n\n  // 输入 pin 码的确认回调\n  function onConfirmPin(payload: string) {\n    SDK.uiResponse({ type: UI_RESPONSE.RECEIVE_PIN, payload });\n    setShowPinInput(false);\n  }\n\n  // 取消输入 pin 码\n  function onPinCancel() {\n    SDK.cancel('pin-cancelled');\n  }\n\n  const handleSearchDevices = async () => {\n    const response = await SDK.searchDevices();\n    console.log('example searchDevices response: ', response);\n    setDevices((response.payload as unknown as Device[]) ?? []);\n  };\n\n  const handleGetFeatures = async () => {\n    const response = await SDK.getFeatures(selectedDevice?.connectId);\n    console.log('example getFeatures response: ', response);\n    if (response.success) {\n      setSelectedDevice({ ...selectedDevice, features: response.payload } as Device);\n    }\n  };\n\n  const handleCheckFirmwareRelease = async () => {\n    const response = await SDK.checkFirmwareRelease(selectedDevice?.connectId);\n    console.log('example checkFirmwareRelease response: ', response);\n  };\n\n  const handleCheckBLEFirmwareRelease = async () => {\n    const response = await SDK.checkBLEFirmwareRelease(selectedDevice?.connectId);\n    console.log('example checkBLEFirmwareRelease response: ', response);\n  };\n\n  const handleCheckTransportRelease = async () => {\n    const response = await SDK.checkTransportRelease();\n    console.log('example checkTransportRelease response: ', response);\n  };\n\n  const handleCheckBridgeStatus = async () => {\n    const response = await SDK.checkBridgeStatus();\n    console.log('example checkBridgeStatus response: ', response);\n  };\n\n  const handleCheckBridgeRelease = async () => {\n    const response = await SDK.checkBridgeRelease(selectedDevice?.connectId, {\n      willUpdateFirmwareVersion: '4.2.0',\n    });\n    console.log('example checkBridgeRelease response: ', response);\n  };\n\n  const handleCheckBootloaderRelease = async () => {\n    const response = await SDK.checkBootloaderRelease(selectedDevice?.connectId, {\n      willUpdateFirmwareVersion: '3.1.0',\n    });\n    console.log('example checkBootloader response: ', response);\n  };\n\n  const handleUpdateBootloader = async () => {\n    const response = await SDK.deviceUpdateBootloader(selectedDevice?.connectId ?? '');\n    console.log('example deviceUpdateBootloader response: ', response);\n  };\n\n  const handleUpdateSettings = async () => {\n    const response = await SDK.updateSettings({\n      connectSrc: 'https://jssdk.onekey.so/0.3.8/',\n    });\n    console.log('example updateSettings response: ', response);\n  };\n\n  const handleFirmwareUpdate = async (file?: Uint8Array) => {\n    const params: any = { updateType: firmwareType ? 'firmware' : 'ble' };\n    if (file) {\n      params.binary = file;\n    }\n    const response = await SDK.firmwareUpdate(\n      type === 'Bluetooth' ? selectedDevice?.connectId : undefined,\n      params\n    );\n    console.log('example firmwareUpdate response: ', response);\n  };\n\n  const handleFirmwareUpdateV2 = async () => {\n    const params: any = {\n      updateType: firmwareType ? 'firmware' : 'ble',\n      version: [4, 3, 0],\n      platform: 'web',\n      forcedUpdateRes: false,\n    };\n\n    if (selectedFile) {\n      params.binary = selectedFile;\n    }\n    const response = await SDK.firmwareUpdateV2(\n      type === 'Bluetooth' ? selectedDevice?.connectId : undefined,\n      params\n    );\n    console.log('example firmwareUpdate response: ', response);\n  };\n\n  const onFileChange = (\n    e: any,\n    callback: (data: Uint8Array, fileType?: string, file?: File) => void\n  ) => {\n    const file = e.target.files?.[0];\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onload = function () {\n      const arrayBuffer = reader.result;\n      const array = new Uint8Array(arrayBuffer as ArrayBuffer);\n      callback(array, file.type, file);\n    };\n  };\n\n  const cancel = () => {\n    SDK.cancel(selectedDevice?.connectId);\n  };\n\n  const handleGetLogs = async () => {\n    const res = await SDK.getLogs();\n    console.log('example getLogs response: ', res);\n  };\n\n  const handleGetPassphraseState = async () => {\n    const res = await SDK.getPassphraseState(selectedDevice?.connectId);\n    console.log('example getLogs response: ', res);\n  };\n\n  const handleRequestWebUsbDevice = async () => {\n    const res = await SDK.requestWebUsbDevice();\n    console.log('example requestWebUsbDevice response: ', res);\n  };\n\n  return (\n    <View>\n      <View style={styles.buttonContainer}>\n        <Button title=\"search devices\" onPress={() => handleSearchDevices()} />\n        <Button title=\"get Features\" onPress={() => handleGetFeatures()} />\n        <Button title=\"check firmware release\" onPress={() => handleCheckFirmwareRelease()} />\n        <Button\n          title=\"check ble firmware release\"\n          onPress={() => handleCheckBLEFirmwareRelease()}\n        />\n        <Button title=\"check transport release\" onPress={() => handleCheckTransportRelease()} />\n        <Button title=\"check bridge status\" onPress={() => handleCheckBridgeStatus()} />\n        <Button title=\"check bridge release\" onPress={() => handleCheckBridgeRelease()} />\n        <Button title=\"check bootloader release\" onPress={() => handleCheckBootloaderRelease()} />\n        <Button title=\"cancel\" onPress={() => cancel()} />\n        <Button title=\"reset\" onPress={() => RNRestart.Restart()} />\n        <Button title=\"getLogs\" onPress={() => handleGetLogs()} />\n        <Button title=\"getPassphraseState\" onPress={() => handleGetPassphraseState()} />\n        <Button title=\"requestWebUsbDevice\" onPress={() => handleRequestWebUsbDevice()} />\n        <Button title=\"updateBootloader\" onPress={() => handleUpdateBootloader()} />\n        <Button title=\"updateSettings\" onPress={() => handleUpdateSettings()} />\n      </View>\n      {showPinInput && (\n        <ReceivePin\n          value={pinValue}\n          onChange={val => setPinValue(val)}\n          onConfirm={val => onConfirmPin(val)}\n        />\n      )}\n\n      <View style={styles.buttonContainer}>\n        <View>\n          <Text>升级固件类型：{firmwareType ? 'firmware' : 'ble'}</Text>\n          <Switch onValueChange={() => setFirmwareType(!firmwareType)} value={firmwareType} />\n        </View>\n        <Button title=\"firmware update\" onPress={() => handleFirmwareUpdate()} />\n        <Button title=\"firmware update v2\" onPress={() => handleFirmwareUpdateV2()} />\n        <Button\n          title=\"firmware update with local file\"\n          // onPress={() => handleFirmwareUpdate(selectedFile)}\n          onPress={() => handleFirmwareUpdateV2()}\n        />\n        {Platform.OS === 'web' ? (\n          <input type=\"file\" onChange={e => onFileChange(e, data => setSelectedFile(data))} />\n        ) : null}\n      </View>\n\n      <DeviceList data={devices} onSelected={device => setSelectedDevice(device)} />\n\n      <View style={styles.container}>\n        <Text>Common Parameters</Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={styles.commonParamItem}>\n            <Text>保持 Session</Text>\n            <Switch\n              value={!!optionalParams?.keepSession}\n              onValueChange={v => setOptionalParams({ ...optionalParams, keepSession: v })}\n            />\n          </View>\n          <View style={styles.commonParamItem}>\n            <Text>重试次数</Text>\n            <TextInput\n              style={styles.input}\n              keyboardType=\"numeric\"\n              value={optionalParams?.retryCount?.toString() ?? ''}\n              onChangeText={v => {\n                const newText = v.replace(/[^\\d]+/, '');\n                setOptionalParams({ ...optionalParams, retryCount: parseInt(newText) });\n              }}\n            />\n          </View>\n          <View style={styles.commonParamItem}>\n            <Text>重试间隔时长</Text>\n            <TextInput\n              style={styles.input}\n              keyboardType=\"numeric\"\n              value={optionalParams?.pollIntervalTime?.toString() ?? ''}\n              onChangeText={v => {\n                const newText = v.replace(/[^\\d]+/, '');\n                setOptionalParams({ ...optionalParams, pollIntervalTime: parseInt(newText) });\n              }}\n            />\n          </View>\n          <View style={styles.commonParamItem}>\n            <Text>连接超时事件</Text>\n            <TextInput\n              style={styles.input}\n              keyboardType=\"numeric\"\n              value={optionalParams?.timeout?.toString() ?? ''}\n              onChangeText={v => {\n                const newText = v.replace(/[^\\d]+/, '');\n                setOptionalParams({ ...optionalParams, timeout: parseInt(newText) });\n              }}\n            />\n          </View>\n          <View style={styles.commonParamItem}>\n            <Text>passphrase State</Text>\n            <TextInput\n              style={styles.input}\n              value={optionalParams?.passphraseState ?? ''}\n              onChangeText={v => {\n                setOptionalParams({ ...optionalParams, passphraseState: v });\n              }}\n            />\n          </View>\n          <View style={styles.commonParamItem}>\n            <Text>init session</Text>\n            <Switch\n              value={!!optionalParams?.initSession}\n              onValueChange={v => setOptionalParams({ ...optionalParams, initSession: v })}\n            />\n          </View>\n        </View>\n      </View>\n\n      <UploadScreen\n        SDK={SDK}\n        type={type}\n        selectedDevice={selectedDevice as KnownDevice}\n        commonParams={optionalParams}\n      />\n\n      <CallDeviceMethods SDK={SDK} selectedDevice={selectedDevice} />\n      <CallBTCMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallEVMMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallOtherMethods SDK={SDK} selectedDevice={selectedDevice} />\n      <CallStarcoinMethods\n        SDK={SDK}\n        selectedDevice={selectedDevice}\n        commonParams={optionalParams}\n      />\n      <CallNEMMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallSolanaMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallStellarMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallTronMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallConfluxMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallNearMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallAptosMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallAlgoMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallCosmosMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallXrpMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallCardanoMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallSuiMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallFilecoinMethods\n        SDK={SDK}\n        selectedDevice={selectedDevice}\n        commonParams={optionalParams}\n      />\n      <CallPolkadotMethods\n        SDK={SDK}\n        selectedDevice={selectedDevice}\n        commonParams={optionalParams}\n      />\n      <CallKaspaMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n      <CallNexaMethods SDK={SDK} selectedDevice={selectedDevice} commonParams={optionalParams} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    padding: 12,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  container: {\n    flexDirection: 'column',\n    borderRadius: 12,\n    borderColor: '#cccccc',\n    borderWidth: 1,\n    overflow: 'hidden',\n    margin: 12,\n    padding: 12,\n    height: 'auto',\n  },\n  commonParamItem: {\n    flexDirection: 'column',\n    paddingStart: 12,\n    paddingEnd: 12,\n  },\n  input: {\n    height: 35,\n    borderWidth: 1,\n    padding: 4,\n  },\n});\n","import { Image } from 'react-native';\nimport { Action, manipulateAsync, SaveFormat } from 'expo-image-manipulator';\nimport { DeviceUploadResourceParams } from '@onekeyfe/hd-core';\nimport { bytesToHex } from '@noble/hashes/utils';\nimport { ResourceType } from '@onekeyfe/hd-transport';\n\nimport axios from 'axios';\n\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (!+bytes) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return `${parseFloat((bytes / k ** i).toFixed(dm))} ${sizes[i]}`;\n}\n\nexport const getImageSize: (\n  imageUrl: string\n) => Promise<{ width: number; height: number }> = imageUrl =>\n  new Promise((resolve, reject) => {\n    Image.getSize(\n      imageUrl,\n      (width: number, height: number) => {\n        resolve({ width, height });\n      },\n      (error: any) => reject(error)\n    );\n  });\n\n/**\n *\tuse axios to convert image url to base64\n * @param image\n */\nexport const imageToBase64 = async (image: string) => {\n  const response = await axios.get(image, {\n    responseType: 'arraybuffer',\n  });\n  const buffer = Buffer.from(response.data, 'binary').toString('base64');\n  return `data:${response.headers['content-type']};base64,${buffer}`;\n};\n\nfunction getOriginX(originW: number, originH: number, scaleW: number, scaleH: number) {\n  const width = Math.ceil((scaleH / originH) * originW);\n  console.log(`image true width: `, width);\n  console.log(`image should width: `, scaleW);\n  console.log(`image true height: `, scaleH);\n  if (width <= scaleW) {\n    return null;\n  }\n  const originX = Math.ceil(Math.ceil(width / 2) - Math.ceil(scaleW / 2));\n  console.log(`originX: `, originX);\n  console.log(`crop size: height: ${scaleH}, width: ${scaleW}, originX: ${originX}, originY: 0`);\n  return originX;\n}\n\nfunction getOriginY(originW: number, originH: number, scaleW: number, scaleH: number) {\n  const height = Math.ceil((scaleW / originW) * originH);\n  console.log(`image true height: `, height);\n  console.log(`image should height: `, scaleH);\n  console.log(`image true width: `, scaleW);\n  if (height <= scaleH) {\n    return null;\n  }\n  const originY = Math.ceil(Math.ceil(height / 2) - Math.ceil(scaleH / 2));\n  console.log(`originY: `, originY);\n  console.log(`crop size: height: ${scaleH}, width: ${scaleW}, , originX: 0, originY: ${originY}`);\n  return originY;\n}\n\nexport const compressNFT = async (\n  uri: string,\n  width: number,\n  height: number,\n  originW: number,\n  originH: number,\n  isThumbnail: boolean\n) => {\n  if (!uri) return;\n  console.log(`width: ${width}, height: ${height}, originW: ${originW}, originH: ${originH}`);\n  const aspectRatioLonger = originW > originH;\n  const aspectRatioEqueal = originW === originH;\n\n  const actions: Action[] = [];\n  if (!isThumbnail) {\n    actions.push({\n      resize: { width },\n    });\n  } else {\n    actions.push({\n      resize: {\n        width: aspectRatioLonger ? undefined : width,\n        height: aspectRatioLonger ? height : undefined,\n      },\n    });\n  }\n\n  if (isThumbnail && !aspectRatioEqueal) {\n    if (aspectRatioLonger) {\n      const originX = getOriginX(originW, originH, width, height);\n      if (originX !== null) {\n        actions.push({\n          crop: {\n            height,\n            width,\n            originX,\n            originY: 0,\n          },\n        });\n      }\n    } else {\n      const originY = getOriginY(originW, originH, width, height);\n      if (originY !== null) {\n        actions.push({\n          crop: {\n            height,\n            width,\n            originX: 0,\n            originY,\n          },\n        });\n      }\n    }\n  }\n\n  const imageResult = await manipulateAsync(uri, actions, {\n    compress: 0.9,\n    format: SaveFormat.JPEG,\n    base64: true,\n  });\n\n  console.log('imageResult ====> : ', imageResult);\n\n  const buffer = Buffer.from(imageResult.base64 ?? '', 'base64');\n  const arrayBuffer = new Uint8Array(buffer);\n  return {\n    ...imageResult,\n    arrayBuffer,\n  };\n};\n\nexport const generateUploadNFTParams = async (\n  uri: string,\n  width: number,\n  height: number,\n  cb?: (data: { base64?: string }) => void\n) => {\n  const data = await compressNFT(uri, 480, 800, width, height, false);\n  const zoomData = await compressNFT(uri, 238, 238, width, height, true);\n\n  cb?.(zoomData as any);\n\n  if (!data?.arrayBuffer && !zoomData?.arrayBuffer) return;\n\n  console.log('nft data byte length: ', formatBytes(data?.arrayBuffer?.byteLength ?? 0, 3));\n  console.log(\n    'nft thumbnail byte length: ',\n    formatBytes(zoomData?.arrayBuffer?.byteLength ?? 0, 3)\n  );\n\n  const metaData = {\n    header: 'Hello onekey',\n    subheader: 'Hello NFT',\n    network: 'BNB Chain',\n    owner: '0x1234',\n  };\n  let metadataBuf = Buffer.from(JSON.stringify(metaData));\n  if (metadataBuf.length > 1024 * 2) {\n    metaData.subheader = '';\n    metadataBuf = Buffer.from(JSON.stringify(metaData));\n  }\n  const nftMetaData = bytesToHex(metadataBuf);\n\n  const params: DeviceUploadResourceParams = {\n    resType: ResourceType.Nft,\n    suffix: 'jpg',\n    dataHex: bytesToHex(data?.arrayBuffer as Uint8Array),\n    thumbnailDataHex: bytesToHex(zoomData?.arrayBuffer as Uint8Array),\n    nftMetaData,\n  };\n\n  return params;\n};\n"],"sourceRoot":""}