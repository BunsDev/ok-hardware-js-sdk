{"version":3,"sources":["src/env/Bluetooth/index.tsx"],"names":["isSdkInit","requestLocationPermission","permissionRequest","granted","_regeneratorRuntime","async","_context","prev","next","awrap","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","sent","RESULTS","GRANTED","console","log","abrupt","stop","Promise","requestBluetoothPermission","_context2","BLUETOOTH_CONNECT","requestBluetoothScanPermission","_context3","BLUETOOTH_SCAN","Bluetooth","_React$useState","React","useState","_React$useState2","_slicedToArray","sdk","createSDK","useEffect","_context4","Platform","OS","t0","Version","t1","t2","t3","getHardwareSDKInstance","then","res","on","event","_jsx","ScrollView","children","_jsxs","View","Text","CallMethods","SDK","type"],"mappings":"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","file":"static/js/7.d884d0de.chunk.js","sourcesContent":["import { CoreApi } from '@onekeyfe/hd-core';\nimport React, { useEffect } from 'react';\nimport { View, Text, Platform, PermissionsAndroid, ScrollView } from 'react-native';\n\nimport { CallMethods } from '../../components/CallMethods';\nimport { getHardwareSDKInstance } from '../../utils/hardwareInstance';\n\nlet isSdkInit = false;\n\nconst requestLocationPermission = async () => {\n  const permissionRequest = await PermissionsAndroid.request(\n    PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION\n  );\n  const granted = permissionRequest === PermissionsAndroid.RESULTS.GRANTED;\n  console.log('Location permission granted: ', granted);\n  return granted;\n};\n\nconst requestBluetoothPermission = async () => {\n  const permissionRequest = await PermissionsAndroid.request(\n    PermissionsAndroid.PERMISSIONS.BLUETOOTH_CONNECT\n  );\n  const granted = permissionRequest === PermissionsAndroid.RESULTS.GRANTED;\n  console.log('Bluetooth permission granted: ', granted);\n  return granted;\n};\nconst requestBluetoothScanPermission = async () => {\n  const permissionRequest = await PermissionsAndroid.request(\n    PermissionsAndroid.PERMISSIONS.BLUETOOTH_SCAN\n  );\n  const granted = permissionRequest === PermissionsAndroid.RESULTS.GRANTED;\n  console.log('Bluetooth permission granted: ', granted);\n  return granted;\n};\n\nexport default function Bluetooth() {\n  const [sdk, createSDK] = React.useState<CoreApi>();\n  const sdkInit = () => {\n    getHardwareSDKInstance().then(res => {\n      createSDK(res);\n      res.on('UI_EVENT', event => {\n        console.log('example received UI_EVENT: ', event);\n      });\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      console.log('Bluetooth init');\n\n      if (!isSdkInit) {\n        if (Platform.OS === 'android') {\n          console.log('Bluetooth android request permission');\n          try {\n            if (Platform.Version >= 23 && !(await requestLocationPermission())) return;\n            if (Platform.Version >= 31 && !(await requestBluetoothPermission())) return;\n            if (Platform.Version >= 31 && !(await requestBluetoothScanPermission())) return;\n          } catch (e) {\n            console.log('request permission error:', e);\n            return;\n          }\n        }\n\n        console.log('Bluetooth SDK init');\n\n        sdkInit();\n        isSdkInit = true;\n      }\n    })();\n  }, []);\n\n  return (\n    <ScrollView>\n      <View>\n        <Text>This is Bluetooth example page, will run on iOS / Android device. </Text>\n        {sdk && <CallMethods SDK={sdk} type=\"Bluetooth\" />}\n      </View>\n    </ScrollView>\n  );\n}\n"],"sourceRoot":""}