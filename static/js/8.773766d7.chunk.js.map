{"version":3,"sources":["src/env/USB/index.tsx"],"names":["isSdkInit","USB","_useState","useState","_useState2","_slicedToArray","sdk","createSDK","_useState3","_useState4","lowLevelSDK","createLowLevelSDK","_useState5","_useState6","useLowLevelApi","setUseLowLevelApi","useEffect","getHardwareSDKInstance","then","res","HardwareSDK","HardwareLowLevelSDK","showContent","useMemo","_jsxs","View","children","_jsx","Text","CallMethods","SDK","type"],"mappings":"yMAOIA,GAAY,EACD,SAASC,IACtB,IAAAC,EAAyBC,qBAAmBC,EAAAC,IAAAH,EAAA,GAArCI,EAAGF,EAAA,GAAEG,EAASH,EAAA,GACrBI,EAAyCL,qBAA2BM,EAAAJ,IAAAG,EAAA,GAA7DE,EAAWD,EAAA,GAAEE,EAAiBF,EAAA,GACrCG,EAA4CT,oBAAkB,GAAMU,EAAAR,IAAAO,EAAA,GAA7DE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GASxCG,qBAAU,WACHhB,GARLiB,mCAAyBC,MAAK,SAAAC,GAC5BZ,EAAUY,EAAIC,aACdT,EAAkBQ,EAAIE,qBACtBN,EAAkBI,EAAIL,mBAQxBd,GAAY,IACX,IAEH,IAAMsB,EAAcC,mBAAQ,WAC1B,OAAIT,EACKJ,GAAeJ,EAEjBA,IACN,CAACI,EAAaJ,EAAKQ,IAEtB,OACEU,eAACC,UAAI,CAAAC,SAAA,CACHC,cAACC,UAAI,CAAAF,SAAA,4DACJJ,GAAeK,cAACE,cAAW,CAACC,IAAKxB,EAAKe,oBAAqBX,EAAaqB,KAAK","file":"static/js/8.773766d7.chunk.js","sourcesContent":["import { CoreApi } from '@onekeyfe/hd-core';\nimport { useState, useEffect, useMemo } from 'react';\nimport { View, Text } from 'react-native';\nimport { LowLevelCoreApi } from '@onekeyfe/hd-core/dist/lowLevelInject';\nimport { CallMethods } from '../../components/CallMethods';\nimport { getHardwareSDKInstance } from '../../utils/hardwareInstance';\n\nlet isSdkInit = false;\nexport default function USB() {\n  const [sdk, createSDK] = useState<CoreApi>();\n  const [lowLevelSDK, createLowLevelSDK] = useState<LowLevelCoreApi>();\n  const [useLowLevelApi, setUseLowLevelApi] = useState<boolean>(false);\n  const sdkInit = () => {\n    getHardwareSDKInstance().then(res => {\n      createSDK(res.HardwareSDK);\n      createLowLevelSDK(res.HardwareLowLevelSDK);\n      setUseLowLevelApi(res.useLowLevelApi);\n    });\n  };\n\n  useEffect(() => {\n    if (!isSdkInit) {\n      sdkInit();\n    }\n    isSdkInit = true;\n  }, []);\n\n  const showContent = useMemo(() => {\n    if (useLowLevelApi) {\n      return lowLevelSDK && sdk;\n    }\n    return sdk;\n  }, [lowLevelSDK, sdk, useLowLevelApi]);\n\n  return (\n    <View>\n      <Text>This is USB example page, will run on desktop browser. </Text>\n      {showContent && <CallMethods SDK={sdk} HardwareLowLevelSDK={lowLevelSDK} type=\"USB\" />}\n    </View>\n  );\n}\n"],"sourceRoot":""}